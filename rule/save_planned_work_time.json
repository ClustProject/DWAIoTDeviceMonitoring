{
  "ruleChain": {
    "additionalInfo": {
      "description": ""
    },
    "name": "Save Planned Work Time",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 1,
    "nodes": [
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 354,
          "layoutY": 262
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetRelatedAttributeNode",
        "name": "Get Holiday",
        "debugMode": false,
        "configuration": {
          "relationsQuery": {
            "fetchLastLevelOnly": false,
            "direction": "TO",
            "maxLevel": 1,
            "filters": [
              {
                "relationType": "Contains",
                "entityTypes": [
                  "CUSTOMER"
                ]
              }
            ]
          },
          "telemetry": false,
          "attrMapping": {
            "plannedHoliday": "plannedHoliday"
          }
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 359,
          "layoutY": 146
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Schedule Info",
        "debugMode": false,
        "configuration": {
          "tellFailureIfAbsent": false,
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "plannedOperationTime",
            "plannedCustom",
            "plannedHoliday"
          ],
          "latestTsKeyNames": [],
          "getLatestValueWithTs": false
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 988,
          "layoutY": 141
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Data",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 674,
          "layoutY": 142
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Accumulate Operation Time",
        "debugMode": true,
        "configuration": {
          "jsScript": "var offsetDiff = (540 + Number(metadata.offset)) * 60 * 1000;\nvar koreanTs = new Date(Number(metadata.ts)).getTime() + offsetDiff;\nvar dayTs = new Date(koreanTs);\ndayTs.setHours(0);\ndayTs.setMinutes(0);\ndayTs.setSeconds(0);\ndayTs.setMilliseconds(0);\nmetadata.dayTs = dayTs.getTime();\n\nvar plan = 8 * 60 * 60 * 1000;\nif (metadata.ss_plannedOperationTime) {\n  var target = JSON.parse(metadata.ss_plannedOperationTime);\n  if (target.isDivideByWeek) {\n    var index = new Date(koreanTs).getDay() - 1;\n    if (index < 0) {\n      index = 6;\n    }\n    plan = target.week[index];\n  } else {\n    plan = target.everyday;\n  }\n}\n\nif (metadata.ss_plannedCustom) {\n  var target = JSON.parse(metadata.ss_plannedCustom);\n  if (target[dayTs.getTime() - offsetDiff]) {\n    plan = target[dayTs.getTime() - offsetDiff];\n  }\n}\n\nif (metadata.plannedHoliday) {\n  var target = JSON.parse(metadata.plannedHoliday);\n  for (var i in target) {\n    var month = Number(target[i].date.split('-')[0]);\n    var date = Number(target[i].date.split('-')[1]);\n    if (dayTs.getMonth() == month - 1 && dayTs.getDate() == date) {\n      if (target[i].isAlways) {\n        plan = 0;\n      } else {\n        if (dayTs.getFullYear() >= target[i].startYear && dayTs.getFullYear() <= target[i].endYear) {\n          plan = 0;\n        }\n      }\n    }\n  }\n}\n\nvar newMsg = [\n  {\n    ts: dayTs.getTime() - offsetDiff,\n    values: {\n      TP_PlannedWorkTimeDay: plan\n    }\n  }\n];\n\nreturn { msg: newMsg, metadata: metadata, msgType: msgType };\n"
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 3,
        "type": "Success"
      },
      {
        "fromIndex": 1,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 3,
        "toIndex": 2,
        "type": "Success"
      }
    ],
    "ruleChainConnections": null
  }
}