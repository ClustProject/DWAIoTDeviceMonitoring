{
  "ruleChain": {
    "additionalInfo": {
      "description": ""
    },
    "name": "Check Connection",
    "type": "CORE",
    "firstRuleNodeId": null,
    "root": false,
    "debugMode": false,
    "configuration": null
  },
  "metadata": {
    "firstNodeIndex": 8,
    "nodes": [
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 944,
          "layoutY": 363
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Activation",
        "debugMode": false,
        "configuration": {
          "jsScript": "return metadata.TP_ActivationState == 'true'"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 654,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Msg",
        "debugMode": false,
        "configuration": {
          "jsScript": "return Object.keys(msg).length > 0"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 1279,
          "layoutY": 582
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetOriginatorFieldsNode",
        "name": "Get Originator Label",
        "debugMode": false,
        "configuration": {
          "fieldsMapping": {
            "label": "originatorLabel"
          }
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 1273,
          "layoutY": 482
        },
        "type": "org.thingsboard.rule.engine.action.TbClearAlarmNode",
        "name": "Clear Alarm",
        "debugMode": false,
        "configuration": {
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    delete metadata.prevAlarmDetails;\n    //now metadata is the same as it comes IN this rule node\n}\n\nreturn details;",
          "alarmType": "unconnected"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 1569,
          "layoutY": 583
        },
        "type": "org.thingsboard.rule.engine.action.TbCreateAlarmNode",
        "name": "Create Alarm",
        "debugMode": false,
        "configuration": {
          "alarmDetailsBuildJs": "var details = {};\nif (metadata.prevAlarmDetails) {\n    details = JSON.parse(metadata.prevAlarmDetails);\n    //remove prevAlarmDetails from metadata\n    delete metadata.prevAlarmDetails;\n    //now metadata is the same as it comes IN this rule node\n}\ndetails.customerL1Name = metadata.ss_customerL1Name\ndetails.customerL2Name = metadata.ss_customerL2Name\ndetails.customerTitle = metadata.ss_customerL2Name\ndetails.customerTitle = metadata.ss_customerL2Name\ndetails.originatorLabel = metadata.originatorLabel\ndetails.category = 'system-state'\n\nreturn details;",
          "useMessageAlarmData": false,
          "alarmType": "unconnected",
          "severity": "CRITICAL",
          "propagate": true,
          "relationTypes": [],
          "dynamicSeverity": false
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 946,
          "layoutY": 481
        },
        "type": "org.thingsboard.rule.engine.filter.TbJsFilterNode",
        "name": "Check Connection",
        "debugMode": false,
        "configuration": {
          "jsScript": "return msg.TP_ConnectionState"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 352,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.transform.TbTransformMsgNode",
        "name": "Create Connection State Msg",
        "debugMode": false,
        "configuration": {
          "jsScript": "var newMsg = {};\nvar latestTs = 0;\nvar prevState = null;\n\n// 값이 존재하면 해당 값으로 대체\nif (metadata.f1_watt) {\n  latestTs = JSON.parse(metadata.f1_watt).ts;\n}\nif (metadata.TP_ConnectionState) {\n  prevState = JSON.parse(metadata.TP_ConnectionState).value;\n}\n\n// 통신 상태 검사, 30분안에 데이터가 없으면 이상\nvar connectionState = false;\nif (metadata.ts - latestTs >= 30 * 60 * 1000) {\n  connectionState = false;\n  if(latestTs != 0){\n      metadata.ts = latestTs + 60 * 1000;\n  }\n} else {\n  connectionState = true;\n}\n\n// 이전값과 비교해 다른경우만 저장, 이전값이 없다면 현 상태 저장\nif (prevState == null || prevState != connectionState) {\n  newMsg.TP_ConnectionState = connectionState;\n}else {\n  // Failure 유도\n  return { msg: {}, metadata: metadata, msgType: msgType };\n}\n\nreturn { msg: newMsg, metadata: metadata, msgType: msgType };\n"
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 939,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.telemetry.TbMsgTimeseriesNode",
        "name": "Save Data",
        "debugMode": false,
        "configuration": {
          "defaultTTL": 0
        }
      },
      {
        "additionalInfo": {
          "description": "",
          "layoutX": 55,
          "layoutY": 249
        },
        "type": "org.thingsboard.rule.engine.metadata.TbGetAttributesNode",
        "name": "Get Previout Connection State",
        "debugMode": false,
        "configuration": {
          "tellFailureIfAbsent": false,
          "clientAttributeNames": [],
          "sharedAttributeNames": [],
          "serverAttributeNames": [
            "customerL1Name",
            "customerL2Name"
          ],
          "latestTsKeyNames": [
            "TP_ConnectionState",
            "f1_watt"
          ],
          "getLatestValueWithTs": true
        }
      }
    ],
    "connections": [
      {
        "fromIndex": 0,
        "toIndex": 5,
        "type": "True"
      },
      {
        "fromIndex": 1,
        "toIndex": 7,
        "type": "True"
      },
      {
        "fromIndex": 2,
        "toIndex": 4,
        "type": "Success"
      },
      {
        "fromIndex": 5,
        "toIndex": 2,
        "type": "False"
      },
      {
        "fromIndex": 5,
        "toIndex": 3,
        "type": "True"
      },
      {
        "fromIndex": 6,
        "toIndex": 1,
        "type": "Success"
      },
      {
        "fromIndex": 7,
        "toIndex": 0,
        "type": "Success"
      },
      {
        "fromIndex": 8,
        "toIndex": 6,
        "type": "Success"
      }
    ],
    "ruleChainConnections": [
      {
        "fromIndex": 4,
        "targetRuleChainId": {
          "entityType": "RULE_CHAIN",
          "id": "198e6bf0-3fc7-11ee-bff8-a768675c6a17"
        },
        "additionalInfo": {
          "description": "",
          "layoutX": 1571,
          "layoutY": 703,
          "ruleChainNodeId": "rule-chain-node-11"
        },
        "type": "Created"
      }
    ]
  }
}