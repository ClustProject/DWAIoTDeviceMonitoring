{
  "title": "Schedule Management",
  "image": null,
  "mobileHide": false,
  "mobileOrder": null,
  "configuration": {
    "description": "",
    "widgets": {
      "355fe703-2da5-b178-723d-cbd8a09ed703": {
        "isSystemType": false,
        "bundleAlias": "moldmecca_maintain_widgets",
        "typeAlias": "schedule_management",
        "type": "latest",
        "title": "New widget",
        "image": null,
        "description": null,
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "b5d25b86-8be5-8557-d416-a6d92109a9aa",
              "filterId": null,
              "dataKeys": []
            },
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "7e4fa5c0-0cd5-8e4a-cbc7-d344e1f97f98",
              "filterId": null,
              "dataKeys": []
            },
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "cf56bf45-71d6-3a80-aee8-1685316400c2",
              "filterId": null,
              "dataKeys": []
            }
          ],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "widget": {
              "originWidth": 1630
            }
          },
          "title": "thingplus.menu.schedule-custom",
          "showTitleIcon": false,
          "titleTooltip": "",
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "cursor": "default"
          },
          "titleStyle": {
            "font-family": "var(--tb-config-font-family)",
            "font-size": "1.6em",
            "font-weight": 600,
            "letter-spacing": "-0.05em",
            "color": "var(--tb-service-font-5)"
          },
          "noDataDisplayMessage": "",
          "showLegend": false,
          "actions": {
            "widgetHeaderButton": [
              {
                "name": "thingplus.action.download",
                "icon": "vertical_align_bottom",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "custom",
                "customFunction": "let { custom, $scope } = widgetContext;\nlet t = custom.t;\nconst COLUMNS = [\n  t('thingplus.label.device-name'),\n  t('thingplus.label.date'),\n  t('thingplus.time-format.hours'),\n  t('thingplus.time-format.minute'),\n];\nlet csv = COLUMNS.join(',') + '\\r\\n';\nlet todayTs = moment().startOf('day').valueOf();\nconsole.log($scope.scheduleList);\nfor (let i in $scope.scheduleList) {\n  for (let j in $scope.scheduleList[i].child) {\n    for (let k in $scope.scheduleList[i].child[j].timeList) {\n      // 시간이 오늘보다 크거나 같은 경우만\n      let target = $scope.scheduleList[i].child[j].timeList[k];\n      let targetTs = moment($scope.targetStart).date(target.index).startOf('day').valueOf();\n      if (targetTs >= todayTs) {\n        let label = `\"${$scope.scheduleList[i].child[j].label}\"`;\n        let date = moment(targetTs).format('YYYY-MM-DD');\n        let hour = Math.floor(target.value);\n        let minute = Math.floor((target.value - hour) * 60);\n        csv += label + ',' + date + ',' + hour + ',' + minute + '\\r\\n';\n      }\n    }\n  }\n}\nlet blob = new Blob(['\\ufeff' + csv], {\n  type: 'application/csv;charset=utf-8;',\n});\nlet elem = window.document.createElement('a');\nelem.href = window.URL.createObjectURL(blob);\nelem.download = 'schedule_' + moment().format('YYYY-MM-DD_HH-mm-ss') + '.csv';\ndocument.body.appendChild(elem);\nelem.click();\ndocument.body.removeChild(elem);\n",
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "18a16770-ce3f-c4cb-d122-73df0eac9a7d"
              },
              {
                "name": "thingplus.action.multi-upload",
                "icon": "vertical_align_top",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"multi-upload-form\">\n  <form\n    #addEntityForm=\"ngForm\"\n    [formGroup]=\"addEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.multi-upload-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.apply-schedule</label>\n          </div>\n          <div\n            id=\"drop-area\"\n            (dragover)=\"onDragOver($event)\"\n            (dragenter)=\"onDragEnter($event)\"\n            (dragleave)=\"onDragLeave($event)\"\n            (drop)=\"onDrop($event)\"\n            [ngClass]=\"highlight\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n            fxLayoutGap=\"0.5em\"\n            *ngIf=\"src == ''\"\n          >\n            <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\n              <path\n                d=\"M12.75 38a8.4 8.4 0 0 1-6.2-2.575A8.783 8.783 0 0 1 6.5 23.1a8.229 8.229 0 0 1 5.85-2.7 11.553 11.553 0 0 1 3.875-7.425A11.356 11.356 0 0 1 24.05 10a11.027 11.027 0 0 1 8.3 3.5 11.779 11.779 0 0 1 3.35 8.45v2.55h1.25a6.682 6.682 0 0 1 5 1.825A6.457 6.457 0 0 1 44 31.25a6.547 6.547 0 0 1-1.95 4.775A6.423 6.423 0 0 1 37.3 38H26a2.732 2.732 0 0 1-2.75-2.75V22.4l-4.65 4.7-1.15-1.1L24 19.5l6.55 6.5-1.15 1.1-4.65-4.7v12.85a1.116 1.116 0 0 0 .4.825 1.23 1.23 0 0 0 .85.375h11.25a5.2 5.2 0 0 0 3.675-8.875 5.009 5.009 0 0 0-3.675-1.525h-3.1v-4.1a10.216 10.216 0 0 0-2.95-7.325 9.654 9.654 0 0 0-7.25-3.075 9.758 9.758 0 0 0-7.25 3.075 10.127 10.127 0 0 0-3 7.325h-1.05a6.828 6.828 0 0 0-5 2.1 7.062 7.062 0 0 0-2.1 5.2 7.213 7.213 0 0 0 7.2 7.2h5.95V38zM24 24.75z\"\n                transform=\"translate(-4 -4)\"\n              />\n            </svg>\n            <span class=\"description\" [innerHtml]=\"t('thingplus.help.help-schedule-upload')\"></span>\n            <span class=\"details\" translate>thingplus.help.help-schedule-size</span>\n            <input type=\"file\" id=\"fileElem\" accept=\"text/*\" (change)=\"handleFiles($event)\" />\n            <label class=\"area-layout\" for=\"fileElem\"></label>\n          </div>\n          <div\n            class=\"preview-box\"\n            *ngIf=\"src != ''\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n            fxLayoutGap=\"0.8em\"\n          >\n            <button class=\"file-remove-btn\" (click)=\"removeSchedule($event)\" fxLayoutAlign=\"center center\">\n              <i class=\"material-icons\">close</i>\n            </button>\n            <svg class=\"preview-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\n              <path\n                d=\"M14798-1046h-28v-36h17.169l10.834 10.834v7.166h-1.538v-6.468l-9.994-9.994h-14.933v32.925h24.927V-1053h1.535v7z\"\n                transform=\"translate(-14764.998 1084)\"\n              />\n              <path\n                d=\"M.432.04h4.077v-1.23H1.945v-1.423h2.2v-1.23h-2.2v-1.263h2.524v-1.23H.432zm8.5 0H10.5l-1.731-3.3 1.6-3.076H8.793l-1.02 2.173-1.019-2.173H5.178l1.6 3.076L5.042.04h1.577l1.154-2.373zm1.855-3.188a3.913 3.913 0 0 0 .653 2.477 2.309 2.309 0 0 0 1.959.823 2.292 2.292 0 0 0 2.548-2.333h-1.5c-.032.687-.39 1.095-1.043 1.095a.89.89 0 0 1-.8-.392 3.026 3.026 0 0 1-.287-1.67 3.026 3.026 0 0 1 .287-1.67.89.89 0 0 1 .8-.392c.653 0 1 .408 1.043 1.095h1.5a2.292 2.292 0 0 0-2.548-2.333 2.309 2.309 0 0 0-1.959.823 3.913 3.913 0 0 0-.657 2.477zM16.811.04h4.077v-1.23h-2.565v-1.423h2.2v-1.23h-2.2v-1.263h2.524v-1.23h-4.036zm4.945 0h4.077v-1.23h-2.565v-5.146h-1.513z\"\n                transform=\"translate(9.57 28.448)\"\n              />\n            </svg>\n            <div class=\"preview-name\">{{fileName}}</div>\n            <div class=\"preview-detail\">\n              {{'thingplus.help.help-apply-file' | translate:{'size': fileSize, 'type':fileType} }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || addEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#multi-upload-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  word-break: keep-all;\n}\n#multi-upload-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#multi-upload-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#multi-upload-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .dialog-close i {\n  font-size: 1.4em;\n}\n#multi-upload-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#multi-upload-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#multi-upload-form .label-box {\n  color: var(--tb-service-font-4);\n  font-size: 1.2em;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .value-box {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  color: var(--tb-service-font-5);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#multi-upload-form .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#multi-upload-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#multi-upload-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#multi-upload-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#multi-upload-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#multi-upload-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#multi-upload-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#multi-upload-form #drop-area {\n  position: relative;\n  border: 1px solid var(--tb-service-border-0);\n  background: var(--tb-service-background-1);\n  width: 100%;\n  padding: 1em;\n  aspect-ratio: 420 / 180;\n  transition-property: border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form #drop-area.highlight {\n  border-color: var(--tb-service-accent);\n}\n#multi-upload-form #drop-area .icon {\n  width: 4em;\n  height: 4em;\n  fill: var(--tb-service-disabled);\n}\n#multi-upload-form #drop-area .description {\n  text-align: center;\n  color: var(--tb-service-font-4);\n  font-size: 1.4em;\n}\n#multi-upload-form #drop-area .description b {\n  color: var(--tb-service-accent);\n}\n#multi-upload-form #drop-area .details {\n  text-align: center;\n  color: var(--tb-service-font-2);\n  font-size: 1.2em;\n}\n#multi-upload-form #drop-area .area-layout {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n#multi-upload-form #fileElem {\n  display: none;\n}\n#multi-upload-form .preview-box {\n  position: relative;\n  width: 100%;\n  aspect-ratio: 250 / 64;\n  border: 1px dashed var(--tb-service-border-3);\n}\n#multi-upload-form .preview-icon {\n  width: 4em;\n  height: 4em;\n  fill: var(--tb-service-accent);\n}\n#multi-upload-form .preview-name {\n  font-size: 1.4em;\n  color: var(--tb-service-font-4);\n}\n#multi-upload-form .preview-detail {\n  font-size: 1.2em;\n  color: var(--tb-service-font-2);\n}\n#multi-upload-form .file-remove-btn {\n  all: unset;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  padding: 0.3em;\n  border-radius: 50%;\n  background-color: var(--tb-service-font-4);\n  cursor: pointer;\n}\n#multi-upload-form .file-remove-btn i {\n  font-size: 1.4em;\n  color: var(--tb-service-font-0);\n}\n#multi-upload-form .preview {\n  max-width: 100%;\n  max-height: 100%;\n  width: auto;\n  height: 50%;\n}\n\n#multi-upload-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#multi-upload-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#multi-upload-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#multi-upload-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#multi-upload-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#multi-upload-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#multi-upload-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #multi-upload-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst MINUTE_MS = 60000;\nconst HOUR_MS = 60 * MINUTE_MS;\n\nconst t = widgetContext.custom.t;\n\nopenAddEntityDialog();\n\nfunction openAddEntityDialog() {\n  customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.dashboardList = [];\n  vm.src = '';\n  vm.t = t;\n  vm.highlight = '';\n  vm.newInfo = {};\n\n  vm.addEntityFormGroup = vm.fb.group({});\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = async function () {\n    vm.addEntityFormGroup.markAsPristine();\n    getAttribute().subscribe(datas => {\n      saveAttribute(datas).subscribe(() => {\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n      });\n    });\n  };\n  vm.onDragOver = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = 'highlight';\n  };\n  vm.onDragEnter = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = 'highlight';\n  };\n  vm.onDragLeave = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = '';\n  };\n  vm.onDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = '';\n    vm.handleFiles(e, true);\n  };\n  vm.removeSchedule = function (e) {\n    vm.src = '';\n  };\n  vm.handleFiles = function (e, isDrag) {\n    let files;\n    if (isDrag) {\n      files = e.dataTransfer.files;\n    } else {\n      files = e.target.files;\n    }\n    vm.fileName = files[0].name;\n    vm.fileType = files[0].type;\n    vm.fileSize = files[0].size;\n\n    if (vm.fileSize > 512 * 1024) {\n      window.alert(t('thingplus.help.error-big-schedule'));\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onloadend = function () {\n      vm.src = reader.result;\n\n      let rows = vm.src.split('\\r\\n');\n      rows = rows.slice(1);\n      for (let i in rows) {\n        if (rows[i] && rows[i] != '') {\n          let data = [rows[i].split('\"')[1]];\n          data = data.concat(rows[i].split('\"')[2].split(',').slice(1));\n          let targetIndex = widgetContext.custom.deviceList.findIndex(x => x.label == data[0]);\n          if (targetIndex != -1) {\n            if (!vm.newInfo[widgetContext.custom.deviceList[targetIndex].id.id]) {\n              vm.newInfo[widgetContext.custom.deviceList[targetIndex].id.id] = {};\n            }\n            if (moment(data[1]).startOf('day').valueOf() >= moment().startOf('day').valueOf()) {\n              vm.newInfo[widgetContext.custom.deviceList[targetIndex].id.id][moment(data[1]).startOf('day').valueOf()] =\n                data[2] * HOUR_MS + data[3] * MINUTE_MS;\n            }\n          }\n        }\n      }\n    };\n  };\n\n  function getAttribute() {\n    let observables = [];\n    for (let i in vm.newInfo) {\n      observables.push(\n        attributeService.getEntityAttributes(\n          {\n            entityType: 'DEVICE',\n            id: i,\n          },\n          'SERVER_SCOPE',\n          ['plannedCustom']\n        )\n      );\n    }\n    return widgetContext.rxjs.forkJoin(observables);\n  }\n\n  function saveAttribute(datas) {\n    let observables = [];\n    let keys = Object.keys(vm.newInfo);\n\n    for (let i in keys) {\n      if (datas && datas[i] && datas[i][0] && datas[i][0].value) {\n        vm.newInfo[keys[i]] = _.merge(datas[i][0].value, vm.newInfo[keys[i]], true);\n      }\n    }\n\n    for (let i in vm.newInfo) {\n      observables.push(\n        attributeService.saveEntityAttributes({ entityType: 'DEVICE', id: i }, 'SERVER_SCOPE', [\n          {\n            key: 'plannedCustom',\n            value: vm.newInfo[i],\n          },\n        ])\n      );\n    }\n    return widgetContext.rxjs.forkJoin(observables);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "436dcb1a-6cc7-aab1-7bae-fb1f3b44ac1d"
              }
            ],
            "customAction": [
              {
                "name": "Set Default Schedule",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"set-default-schedule-form\">\n  <form\n    #editEntityForm=\"ngForm\"\n    [formGroup]=\"editEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.set-default-schedule-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxFlex fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div class=\"step-content\" fxLayout=\"column\" fxLayoutGap=\"2em\">\n        <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n            <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n              <label translate>\n                {{type == 'CUSTOMER' ? 'thingplus.label.customerL2-name' : 'thingplus.label.device-name'}}\n              </label>\n            </div>\n            <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n              <input matInput formControlName=\"label\" readonly />\n            </div>\n          </div>\n        </div>\n        <div fxLayout=\"column\" fxLayoutAlign=\"start center\" formGroupName=\"plannedOperationTime\">\n          <div class=\"header-row\" fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\">\n                <label class=\"side-label\" translate>thingplus.label.divide-by-weekday</label>\n                <div class=\"switch-track\" [ngClass]=\"{'active': divideWeek}\" (click)=\"divideWeek = !divideWeek\">\n                  <div class=\"switch-ball\"></div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class=\"sub-row\" fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n            <div\n              fxFlex\n              class=\"sub-row-box\"\n              fxLayout=\"row\"\n              fxLayoutAlign=\"space-between center\"\n              fxLayoutGap=\"0.6em\"\n              *ngIf=\"!divideWeek\"\n            >\n              <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\" class=\"input-box\">\n                <label class=\"side-label\" translate>thingplus.label.everyday</label>\n                <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                  <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                    <input\n                      class=\"input-small\"\n                      type=\"number\"\n                      step=\"1\"\n                      min=\"0\"\n                      max=\"24\"\n                      maxlength=\"2\"\n                      matInput\n                      formControlName=\"everydayHour\"\n                    />\n                  </div>\n                  <span class=\"unit-label\" translate>thingplus.time-format.hours</span>\n                  <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                    <input\n                      class=\"input-small\"\n                      type=\"number\"\n                      step=\"1\"\n                      min=\"0\"\n                      max=\"60\"\n                      maxlength=\"2\"\n                      matInput\n                      formControlName=\"everydayMin\"\n                    />\n                  </div>\n\n                  <span class=\"unit-label\" translate>thingplus.time-format.minute</span>\n                </div>\n              </div>\n            </div>\n            <div fxFlex formArrayName=\"week\" *ngIf=\"divideWeek\">\n              <div\n                fxFlex\n                class=\"sub-row-box\"\n                fxLayout=\"row\"\n                fxLayoutAlign=\"space-between center\"\n                fxLayoutGap=\"0.6em\"\n                *ngFor=\"let day of getWeek().controls; index as i\"\n              >\n                <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\" class=\"input-box\">\n                  <label class=\"side-label\" translate>{{'thingplus.time-format.weekday-long.' + dayList[i]}}</label>\n                  <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\" [formGroupName]=\"i\">\n                    <div class=\"value-box\" fxLayoutAlign=\"center center\">\n                      <input\n                        class=\"input-small\"\n                        type=\"number\"\n                        step=\"1\"\n                        min=\"0\"\n                        max=\"24\"\n                        maxlength=\"2\"\n                        matInput\n                        formControlName=\"hour\"\n                      />\n                    </div>\n                    <span class=\"unit-label\" translate>thingplus.time-format.hours</span>\n                    <div class=\"value-box\" fxLayoutAlign=\"center center\">\n                      <input\n                        class=\"input-small\"\n                        type=\"number\"\n                        step=\"1\"\n                        min=\"0\"\n                        max=\"60\"\n                        maxlength=\"2\"\n                        matInput\n                        formControlName=\"min\"\n                      />\n                    </div>\n                    <span class=\"unit-label\" translate>thingplus.time-format.minute</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || editEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#set-default-schedule-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  min-height: 70vh;\n}\n#set-default-schedule-form input[type='number']::-webkit-outer-spin-button,\n#set-default-schedule-form input[type='number']::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n#set-default-schedule-form input[type='number'] {\n  -moz-appearance: textfield;\n}\n#set-default-schedule-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#set-default-schedule-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#set-default-schedule-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#set-default-schedule-form .dialog-close i {\n  font-size: 1.4em;\n}\n#set-default-schedule-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#set-default-schedule-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#set-default-schedule-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#set-default-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#set-default-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#set-default-schedule-form .header-row,\n#set-default-schedule-form .sub-row {\n  width: 100%;\n}\n\n#set-default-schedule-form .header-row {\n  background-color: var(--tb-service-background-1);\n  padding: 1.6em;\n  border: 1px solid var(--tb-service-border-0);\n}\n\n#set-default-schedule-form .sub-row-box {\n  padding: 1.6em;\n  border: 1px solid var(--tb-service-border-0);\n  border-top: none;\n}\n\n#set-default-schedule-form .label-box {\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#set-default-schedule-form .input-box.disabled .label-box {\n  color: var(--tb-service-font-1);\n}\n#set-default-schedule-form .value-box {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#set-default-schedule-form .value-box.no-border {\n  border: none !important;\n}\n\n#set-default-schedule-form .input-box:not(.disabled) .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#set-default-schedule-form .input-box:not(.disabled) .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#set-default-schedule-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#set-default-schedule-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#set-default-schedule-form .input-box.disabled .value-box {\n  background-color: var(--tb-service-background-1);\n}\n#set-default-schedule-form .input-box.disabled .value-box input {\n  color: var(--tb-service-font-2);\n  cursor: default;\n}\n#set-default-schedule-form .side-label {\n  color: var(--tb-service-font-4);\n  font-size: 1.4em;\n}\n#set-default-schedule-form .switch-track {\n  position: relative;\n  width: 3.6em;\n  height: 1.6em;\n  border-radius: 0.8em;\n  background-color: var(--tb-service-border-1);\n  transition-property: background-color;\n  transition-duration: var(--tb-config-color-duration);\n  cursor: pointer;\n}\n#set-default-schedule-form .switch-track.active {\n  background-color: var(--tb-service-accent);\n}\n#set-default-schedule-form .switch-ball {\n  position: absolute;\n  top: 50%;\n  left: 0.8em;\n  transform: translate(-50%, -50%);\n  width: 1.2em;\n  height: 1.2em;\n  border-radius: 0.6em;\n  background-color: var(--tb-service-background-0);\n  transition-property: left;\n  transition-duration: var(--tb-config-color-duration);\n}\n#set-default-schedule-form .switch-track.active .switch-ball {\n  left: calc(100% - 0.8em);\n}\n#set-default-schedule-form .radio-box .radio-circle {\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 1px solid var(--tb-service-border-1);\n}\n#set-default-schedule-form .radio-box .radio-circle {\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 0.1em solid var(--tb-service-border-1);\n}\n#set-default-schedule-form .radio-box.active .radio-circle {\n  width: 2em;\n  height: 2em;\n  border: 0.6em solid var(--tb-service-accent);\n}\n#set-default-schedule-form .radio-box .radio-label {\n  font-size: 1.4em;\n  color: var(--tb-service-font-4);\n}\n#set-default-schedule-form .input-small {\n  width: 2em;\n}\n#set-default-schedule-form .unit-label {\n  color: var(--tb-service-font-4);\n  font-size: 1.4em;\n}\n\n#set-default-schedule-form .value-box .mat-select-trigger {\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  line-height: 1;\n}\n#set-default-schedule-form .value-box .mat-select-value {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  font-size: 1em;\n  color: var(--tb-service-font-5);\n}\n#set-default-schedule-form .value-box .mat-select-arrow {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  border-left: 0.4em solid transparent;\n  border-right: 0.4em solid transparent;\n  border-top: 0.4em solid;\n  color: var(--tb-service-accent);\n}\n#set-default-schedule-form .description-box {\n  margin-top: calc(0.6em / 1.2);\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n}\n#set-default-schedule-form .description-box b {\n  color: var(--tb-service-accent);\n}\n#set-default-schedule-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#set-default-schedule-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#set-default-schedule-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#set-default-schedule-form .input-box.error .description-box {\n  display: none;\n}\n#set-default-schedule-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#set-default-schedule-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#set-default-schedule-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#set-default-schedule-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#set-default-schedule-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#set-default-schedule-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#set-default-schedule-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#set-default-schedule-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#set-default-schedule-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n#set-default-schedule-form .button:disabled,\n#set-default-schedule-form .button[disabled] {\n  background-color: var(--tb-service-font-1);\n  color: var(--tb-service-font-0);\n  cursor: default;\n}\n\n@media (min-width: 960px) {\n  #set-default-schedule-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst t = widgetContext.custom.t;\nconst DEFAULT_TIME = 8 * 3600000;\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n  customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.ownerLevel = widgetContext.$scope.ownerLevel;\n  vm.t = t;\n  vm.type = additionalParams.type;\n\n  vm.dayList = ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun'];\n  let plannedOperationTime = {\n    isDivideByWeek: false,\n    everyday: DEFAULT_TIME,\n    week: [DEFAULT_TIME, DEFAULT_TIME, DEFAULT_TIME, DEFAULT_TIME, DEFAULT_TIME, DEFAULT_TIME, DEFAULT_TIME],\n  };\n  if (additionalParams.type == 'DEVICE') {\n    let targetIndex = widgetContext.custom.commonInfo[additionalParams.index].findIndex(\n      item => item.key == 'plannedOperationTime'\n    );\n    if (targetIndex != -1) {\n      plannedOperationTime = _.cloneDeep(widgetContext.custom.commonInfo[additionalParams.index][targetIndex].value);\n    }\n  }\n  vm.divideWeek = plannedOperationTime.isDivideByWeek;\n  plannedOperationTime.everyday = toDate(plannedOperationTime.everyday);\n  for (let i in plannedOperationTime.week) {\n    plannedOperationTime.week[i] = toDate(plannedOperationTime.week[i]);\n  }\n  vm.editEntityFormGroup = vm.fb.group({\n    label: [entityLabel],\n    plannedOperationTime: vm.fb.group({\n      everydayHour: [plannedOperationTime.everyday[0]],\n      everydayMin: [plannedOperationTime.everyday[1]],\n      week: vm.fb.array([\n        vm.fb.group({ hour: [plannedOperationTime.week[0][0]], min: [plannedOperationTime.week[0][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[1][0]], min: [plannedOperationTime.week[1][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[2][0]], min: [plannedOperationTime.week[2][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[3][0]], min: [plannedOperationTime.week[3][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[4][0]], min: [plannedOperationTime.week[4][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[5][0]], min: [plannedOperationTime.week[5][1]] }),\n        vm.fb.group({ hour: [plannedOperationTime.week[6][0]], min: [plannedOperationTime.week[6][1]] }),\n      ]),\n    }),\n  });\n\n  vm.getWeek = function () {\n    return this.editEntityFormGroup.get('plannedOperationTime').controls['week'];\n  };\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = function () {\n    vm.editEntityFormGroup.markAsPristine();\n    saveAttribute().subscribe(() => {\n      widgetContext.updateAliases();\n      vm.dialogRef.close(null);\n    });\n  };\n\n  function saveAttribute() {\n    let plannedOperationTime = vm.editEntityFormGroup.get('plannedOperationTime').value;\n    plannedOperationTime.isDivideByWeek = vm.divideWeek;\n    plannedOperationTime.everyday = getTime(plannedOperationTime.everydayHour, plannedOperationTime.everydayMin);\n    delete plannedOperationTime.everydayHour;\n    delete plannedOperationTime.everydayMin;\n    for (let i in plannedOperationTime.week) {\n      plannedOperationTime.week[i] = getTime(plannedOperationTime.week[i].hour, plannedOperationTime.week[i].min);\n    }\n\n    let observables = [];\n    let attributeBody = [\n      { key: 'plannedOperationTime', value: plannedOperationTime },\n      { key: 'plannedCustom', value: {} },\n    ];\n\n    if (additionalParams.type == 'CUSTOMER') {\n      let entityList = additionalParams.child.map(x => x.id);\n      for (let i in entityList) {\n        observables.push(attributeService.saveEntityAttributes(entityList[i], 'SERVER_SCOPE', attributeBody));\n      }\n    } else {\n      observables.push(attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody));\n    }\n\n    return widgetContext.rxjs.forkJoin(observables);\n  }\n  function getTime(hour, min) {\n    let result = hour * 3600000 + min * 60000;\n    if (result > 86400000) {\n      result = 86400000;\n    }\n    return result;\n  }\n  function toDate(value) {\n    if (isNaN(Number(value))) return [8, 0];\n    if (value > 86400000) {\n      value = 86400000;\n    }\n    let hour = Math.floor(value / 3600000);\n    let temp = value % 3600000;\n    let min = Math.floor(temp / 60000);\n    return [hour, min];\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "84820da0-a697-d5e4-f18f-828e1b8efa23"
              },
              {
                "name": "Reset Default Schedule",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"reset-default-schedule-form\">\n  <form\n    #deleteEntityForm=\"ngForm\"\n    [formGroup]=\"deleteEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.reset-default-schedule-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 4px\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n      <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n        <div class=\"label\">\n          {{'thingplus.dialog.reset-default-schedule-content' | translate:{entityName: entityName} }}\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button delete-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || deleteEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.reset\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#reset-default-schedule-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#reset-default-schedule-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#reset-default-schedule-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#reset-default-schedule-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#reset-default-schedule-form .dialog-close i {\n  font-size: 1.4em;\n}\n#reset-default-schedule-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#reset-default-schedule-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#reset-default-schedule-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#reset-default-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#reset-default-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#reset-default-schedule-form .label {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n}\n\n#reset-default-schedule-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#reset-default-schedule-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#reset-default-schedule-form .delete-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-warn);\n}\n#reset-default-schedule-form .delete-button:hover {\n  background-color: var(--tb-service-warn-hover);\n}\n#reset-default-schedule-form .delete-button:active {\n  background-color: var(--tb-service-warn-pressed);\n}\n#reset-default-schedule-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#reset-default-schedule-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#reset-default-schedule-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #reset-default-schedule-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst JWT_TOKEN = window.localStorage.getItem('jwt_token');\nconst t = widgetContext.custom.t;\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n  customDialog.customDialog(htmlTemplate, DeleteEntityDialogController).subscribe();\n}\n\nfunction DeleteEntityDialogController(instance) {\n  let vm = instance;\n  vm.entityName = entityLabel;\n  vm.deleteEntityFormGroup = vm.fb.group({});\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = function () {\n    vm.deleteEntityFormGroup.markAsPristine();\n    saveAttribute().subscribe(() => {\n      widgetContext.updateAliases();\n      vm.dialogRef.close(null);\n    });\n  };\n\n  function saveAttribute() {\n    let observables = [];\n    let attributeBody = [{ key: 'plannedCustom', value: {} }];\n\n    if (additionalParams.type == 'CUSTOMER') {\n      let entityList = additionalParams.child.map(x => x.id);\n      for (let i in entityList) {\n        observables.push(attributeService.saveEntityAttributes(entityList[i], 'SERVER_SCOPE', attributeBody));\n      }\n    } else {\n      observables.push(attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody));\n    }\n\n    return widgetContext.rxjs.forkJoin(observables);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "f42943b4-8eba-0f4a-e7fd-51c729323f59"
              },
              {
                "name": "Edit Schedule",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"edit-schedule-form\">\n  <form\n    #editEntityForm=\"ngForm\"\n    [formGroup]=\"editEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.edit-schedule-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxFlex fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div class=\"step-content\" fxLayout=\"column\" fxLayoutGap=\"2em\">\n        <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n          <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n            <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n              <label translate>thingplus.label.device-name</label>\n            </div>\n            <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n              <input matInput formControlName=\"label\" readonly />\n            </div>\n          </div>\n        </div>\n        <div fxLayout=\"column\" fxLayoutAlign=\"start center\">\n          <div class=\"sub-row\" fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n            <div fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"1em\" class=\"input-box\">\n              <label class=\"side-label\">{{targetDate}}</label>\n              <div fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                  <input\n                    class=\"input-small\"\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"0\"\n                    max=\"24\"\n                    maxlength=\"2\"\n                    matInput\n                    formControlName=\"hour\"\n                  />\n                </div>\n                <span class=\"unit-label\" translate>thingplus.time-format.hours</span>\n                <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"0.6em\">\n                  <input\n                    class=\"input-small\"\n                    type=\"number\"\n                    step=\"1\"\n                    min=\"0\"\n                    max=\"60\"\n                    maxlength=\"2\"\n                    matInput\n                    formControlName=\"min\"\n                  />\n                </div>\n\n                <span class=\"unit-label\" translate>thingplus.time-format.minute</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || editEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#edit-schedule-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  min-height: 40vh;\n}\n#edit-schedule-form input[type='number']::-webkit-outer-spin-button,\n#edit-schedule-form input[type='number']::-webkit-inner-spin-button {\n  -webkit-appearance: none;\n  margin: 0;\n}\n#edit-schedule-form input[type='number'] {\n  -moz-appearance: textfield;\n}\n#edit-schedule-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#edit-schedule-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#edit-schedule-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-schedule-form .dialog-close i {\n  font-size: 1.4em;\n}\n#edit-schedule-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#edit-schedule-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#edit-schedule-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#edit-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#edit-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#edit-schedule-form .header-row,\n#edit-schedule-form .sub-row {\n  width: 100%;\n}\n\n#edit-schedule-form .header-row {\n  background-color: var(--tb-service-background-1);\n  padding: 1.6em;\n  border: 1px solid var(--tb-service-border-0);\n}\n\n#edit-schedule-form .sub-row-box {\n  padding: 1.6em;\n  border: 1px solid var(--tb-service-border-0);\n  border-top: none;\n}\n\n#edit-schedule-form .label-box {\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-schedule-form .input-box.disabled .label-box {\n  color: var(--tb-service-font-1);\n}\n#edit-schedule-form .value-box {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-schedule-form .value-box.no-border {\n  border: none !important;\n}\n\n#edit-schedule-form .input-box:not(.disabled) .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-schedule-form .input-box:not(.disabled) .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#edit-schedule-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#edit-schedule-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#edit-schedule-form .input-box.disabled .value-box {\n  background-color: var(--tb-service-background-1);\n}\n#edit-schedule-form .input-box.disabled .value-box input {\n  color: var(--tb-service-font-2);\n  cursor: default;\n}\n#edit-schedule-form .side-label {\n  color: var(--tb-service-font-4);\n  padding-left: 0.5em;\n  font-size: 1.4em;\n}\n#edit-schedule-form .switch-track {\n  position: relative;\n  width: 3.6em;\n  height: 1.6em;\n  border-radius: 0.8em;\n  background-color: var(--tb-service-border-1);\n  transition-property: background-color;\n  transition-duration: var(--tb-config-color-duration);\n  cursor: pointer;\n}\n#edit-schedule-form .switch-track.active {\n  background-color: var(--tb-service-accent);\n}\n#edit-schedule-form .switch-ball {\n  position: absolute;\n  top: 50%;\n  left: 0.8em;\n  transform: translate(-50%, -50%);\n  width: 1.2em;\n  height: 1.2em;\n  border-radius: 0.6em;\n  background-color: var(--tb-service-background-0);\n  transition-property: left;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-schedule-form .switch-track.active .switch-ball {\n  left: calc(100% - 0.8em);\n}\n#edit-schedule-form .radio-box .radio-circle {\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 1px solid var(--tb-service-border-1);\n}\n#edit-schedule-form .radio-box .radio-circle {\n  width: 2em;\n  height: 2em;\n  border-radius: 50%;\n  border: 0.1em solid var(--tb-service-border-1);\n}\n#edit-schedule-form .radio-box.active .radio-circle {\n  width: 2em;\n  height: 2em;\n  border: 0.6em solid var(--tb-service-accent);\n}\n#edit-schedule-form .radio-box .radio-label {\n  font-size: 1.4em;\n  color: var(--tb-service-font-4);\n}\n#edit-schedule-form .input-small {\n  width: 2em;\n}\n#edit-schedule-form .unit-label {\n  color: var(--tb-service-font-4);\n  font-size: 1.4em;\n}\n\n#edit-schedule-form .value-box .mat-select-trigger {\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  line-height: 1;\n}\n#edit-schedule-form .value-box .mat-select-value {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  font-size: 1em;\n  color: var(--tb-service-font-5);\n}\n#edit-schedule-form .value-box .mat-select-arrow {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  border-left: 0.4em solid transparent;\n  border-right: 0.4em solid transparent;\n  border-top: 0.4em solid;\n  color: var(--tb-service-accent);\n}\n#edit-schedule-form .description-box {\n  margin-top: calc(0.6em / 1.2);\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n}\n#edit-schedule-form .description-box b {\n  color: var(--tb-service-accent);\n}\n#edit-schedule-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#edit-schedule-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#edit-schedule-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#edit-schedule-form .input-box.error .description-box {\n  display: none;\n}\n#edit-schedule-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#edit-schedule-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#edit-schedule-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-schedule-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#edit-schedule-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#edit-schedule-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#edit-schedule-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#edit-schedule-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-schedule-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n#edit-schedule-form .button:disabled,\n#edit-schedule-form .button[disabled] {\n  background-color: var(--tb-service-font-1);\n  color: var(--tb-service-font-0);\n  cursor: default;\n}\n\n@media (min-width: 960px) {\n  #edit-schedule-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst t = widgetContext.custom.t;\nconst DEFAULT_TIME = 8 * 3600000;\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n  customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.ownerLevel = widgetContext.$scope.ownerLevel;\n  vm.t = t;\n  vm.targetTs = moment(widgetContext.$scope.targetStart).date(additionalParams.index).valueOf();\n  vm.targetDate = moment(vm.targetTs).format('YYYY-MM-DD');\n  vm.plannedCustom = widgetContext.custom.futureInfo[entityId.id].plannedCustom || {};\n  let hour = _.floor(additionalParams.value);\n  let min = _.floor((additionalParams.value - hour) * 60);\n  vm.editEntityFormGroup = vm.fb.group({\n    label: [entityLabel],\n    hour: [hour],\n    min: [min],\n  });\n\n  vm.getWeek = function () {\n    return this.editEntityFormGroup.get('plannedOperationTime').controls['week'];\n  };\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = function () {\n    vm.editEntityFormGroup.markAsPristine();\n    saveAttribute().subscribe(() => {\n      widgetContext.updateAliases();\n      vm.dialogRef.close(null);\n    });\n  };\n\n  function saveAttribute() {\n    let hour = vm.editEntityFormGroup.get('hour').value;\n    let min = vm.editEntityFormGroup.get('min').value;\n    vm.plannedCustom[vm.targetTs] = getTime(hour, min);\n    let attributeBody = [{ key: 'plannedCustom', value: vm.plannedCustom }];\n\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n  function getTime(hour, min) {\n    let result = hour * 3600000 + min * 60000;\n    if (result > 86400000) {\n      result = 86400000;\n    }\n    return result;\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "efbb0a26-6c8e-b67f-db76-c2b35154133c"
              },
              {
                "name": "Delete Schedule",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"delete-schedule-form\">\n  <form\n    #deleteEntityForm=\"ngForm\"\n    [formGroup]=\"deleteEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.delete-schedule-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 4px\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n      <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n        <div class=\"label\">{{'thingplus.dialog.reset-schedule-content' | translate:{date: date} }}</div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button delete-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || deleteEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.delete\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#delete-schedule-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#delete-schedule-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#delete-schedule-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#delete-schedule-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#delete-schedule-form .dialog-close i {\n  font-size: 1.4em;\n}\n#delete-schedule-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#delete-schedule-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#delete-schedule-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#delete-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#delete-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#delete-schedule-form .label {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n}\n\n#delete-schedule-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#delete-schedule-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#delete-schedule-form .delete-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-warn);\n}\n#delete-schedule-form .delete-button:hover {\n  background-color: var(--tb-service-warn-hover);\n}\n#delete-schedule-form .delete-button:active {\n  background-color: var(--tb-service-warn-pressed);\n}\n#delete-schedule-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#delete-schedule-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#delete-schedule-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #delete-schedule-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst JWT_TOKEN = window.localStorage.getItem('jwt_token');\nconst t = widgetContext.custom.t;\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n  customDialog.customDialog(htmlTemplate, DeleteEntityDialogController).subscribe();\n}\n\nfunction DeleteEntityDialogController(instance) {\n  let vm = instance;\n  vm.entityName = entityName;\n  vm.deleteEntityFormGroup = vm.fb.group({});\n  vm.targetTs = moment(widgetContext.$scope.targetStart).date(additionalParams.index).valueOf();\n  vm.plannedCustom = widgetContext.custom.futureInfo[entityId.id].plannedCustom || {};\n  vm.date = moment(vm.targetTs).format('YYYY-MM-DD');\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = function () {\n    vm.deleteEntityFormGroup.markAsPristine();\n    saveAttribute().subscribe(() => {\n      widgetContext.updateAliases();\n      vm.dialogRef.close(null);\n    });\n  };\n\n  function saveAttribute() {\n    vm.plannedCustom[vm.targetTs] = 0;\n    let attributeBody = [{ key: 'plannedCustom', value: vm.plannedCustom }];\n\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "f5ac0a0f-5b54-ce09-fcaf-42021d3c11c1"
              },
              {
                "name": "Reset Schedule",
                "icon": "more_horiz",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"reset-schedule-form\">\n  <form\n    #deleteEntityForm=\"ngForm\"\n    [formGroup]=\"deleteEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.reset-schedule-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 4px\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n      <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n        <div class=\"label\">{{'thingplus.dialog.reset-schedule-content' | translate:{date: date} }}</div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button delete-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || deleteEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.reset\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#reset-schedule-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#reset-schedule-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#reset-schedule-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#reset-schedule-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#reset-schedule-form .dialog-close i {\n  font-size: 1.4em;\n}\n#reset-schedule-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#reset-schedule-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#reset-schedule-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#reset-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#reset-schedule-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#reset-schedule-form .label {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n}\n\n#reset-schedule-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#reset-schedule-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#reset-schedule-form .delete-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-warn);\n}\n#reset-schedule-form .delete-button:hover {\n  background-color: var(--tb-service-warn-hover);\n}\n#reset-schedule-form .delete-button:active {\n  background-color: var(--tb-service-warn-pressed);\n}\n#reset-schedule-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#reset-schedule-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#reset-schedule-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #reset-schedule-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst JWT_TOKEN = window.localStorage.getItem('jwt_token');\nconst t = widgetContext.custom.t;\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n  customDialog.customDialog(htmlTemplate, DeleteEntityDialogController).subscribe();\n}\n\nfunction DeleteEntityDialogController(instance) {\n  let vm = instance;\n  vm.entityName = entityName;\n  vm.deleteEntityFormGroup = vm.fb.group({});\n  vm.targetTs = moment(widgetContext.$scope.targetStart).date(additionalParams.index).valueOf();\n  vm.plannedCustom = widgetContext.custom.futureInfo[entityId.id].plannedCustom || {};\n  vm.date = moment(vm.targetTs).format('YYYY-MM-DD');\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = function () {\n    vm.deleteEntityFormGroup.markAsPristine();\n    saveAttribute().subscribe(() => {\n      widgetContext.updateAliases();\n      vm.dialogRef.close(null);\n    });\n  };\n\n  function saveAttribute() {\n    delete vm.plannedCustom[vm.targetTs];\n    let attributeBody = [{ key: 'plannedCustom', value: vm.plannedCustom }];\n\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "4936adcb-ddb6-9162-6976-3fe677afada8"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "355fe703-2da5-b178-723d-cbd8a09ed703"
      },
      "547dac1b-67f5-a33f-f6a1-3d36f47229f6": {
        "isSystemType": false,
        "bundleAlias": "moldmecca_maintain_widgets",
        "typeAlias": "maintain_holiday",
        "type": "latest",
        "title": "New widget",
        "image": null,
        "description": null,
        "sizeX": 7.5,
        "sizeY": 3,
        "config": {
          "datasources": [
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "b5d25b86-8be5-8557-d416-a6d92109a9aa",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "plannedHoliday",
                  "type": "attribute",
                  "label": "plannedHoliday",
                  "color": "#2196f3",
                  "settings": {},
                  "_hash": 0.8331625682334944
                }
              ]
            },
            {
              "type": "entity",
              "name": null,
              "entityAliasId": "7e4fa5c0-0cd5-8e4a-cbc7-d344e1f97f98",
              "filterId": null,
              "dataKeys": [
                {
                  "name": "date",
                  "type": "timeseries",
                  "label": "thingplus.label.holiday",
                  "color": "#4caf50",
                  "settings": {
                    "useCellContentFunction": true,
                    "cellContentFunction": "let month = Number(value.split('-')[0])\nlet date = Number(value.split('-')[1])\nreturn ctx.custom.t('thingplus.time-format.md-value', {month, date})"
                  },
                  "_hash": 0.8809600247306735,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "isAlways",
                  "type": "timeseries",
                  "label": "thingplus.label.date-range",
                  "color": "#f44336",
                  "settings": {
                    "hidden": false,
                    "useCellStyleFunction": false,
                    "useCellContentFunction": true,
                    "useCellActionFunction": false,
                    "cellContentFunction": "if (value == true) {\n    return ctx.custom.t('thingplus.label.every-year')\n} else {\n    if (row.startYear == row.endYear) {\n        return ctx.custom.t(\n            'thingplus.time-format.year-value', {\n                year: row.startYear\n            })\n    } else {\n        return ctx.custom.t(\n            'thingplus.time-format.year-value', {\n                year: row.startYear\n            }) + ' ~ ' + ctx.custom.t(\n            'thingplus.time-format.year-value', {\n                year: row.endYear\n            })\n    }\n}"
                  },
                  "_hash": 0.6623962017756166,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                },
                {
                  "name": "content",
                  "type": "timeseries",
                  "label": "thingplus.label.content",
                  "color": "#ffc107",
                  "settings": {
                    "hidden": false,
                    "useCellStyleFunction": false,
                    "useCellContentFunction": false,
                    "useCellActionFunction": false
                  },
                  "_hash": 0.525985738394809,
                  "units": null,
                  "decimals": null,
                  "funcBody": null,
                  "usePostProcessing": null,
                  "postFuncBody": null
                }
              ]
            }
          ],
          "timewindow": {
            "realtime": {
              "timewindowMs": 60000
            }
          },
          "showTitle": false,
          "backgroundColor": "#fff",
          "color": "rgba(0, 0, 0, 0.87)",
          "padding": "0px",
          "settings": {
            "widget": {
              "originWidth": 1630
            }
          },
          "title": "thingplus.menu.schedule-holiday",
          "showTitleIcon": false,
          "dropShadow": false,
          "enableFullscreen": false,
          "widgetStyle": {
            "cursor": "default"
          },
          "noDataDisplayMessage": "",
          "showLegend": false,
          "titleTooltip": "",
          "titleStyle": {
            "font-family": "var(--tb-config-font-family)",
            "font-size": "1.6em",
            "font-weight": 600,
            "letter-spacing": "-0.05em",
            "color": "var(--tb-service-font-5)"
          },
          "actions": {
            "widgetHeaderButton": [
              {
                "name": "thingplus.action.download",
                "icon": "vertical_align_bottom",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "custom",
                "customFunction": "let { custom, $scope } = widgetContext;\nlet t = custom.t;\nconst COLUMNS = [t('thingplus.label.holiday'), t('thingplus.label.date-range'), t('thingplus.label.content')];\nlet csv = COLUMNS.join(',') + '\\r\\n';\nlet todayTs = moment().startOf('day').valueOf();\nfor (let i in custom.mainData) {\n  let holiday =\n    addZero(custom.mainData[i].date.split('-')[0], 2) + '-' + addZero(custom.mainData[i].date.split('-')[1], 2);\n  let dateRange = 'always';\n  let content = custom.mainData[i].content;\n  if (custom.mainData[i].isAlways == false) {\n    if (custom.mainData[i].startYear == custom.mainData[i].endYear) {\n      dateRange = custom.mainData[i].startYear;\n    } else {\n      dateRange = custom.mainData[i].startYear + '-' + custom.mainData[i].endYear;\n    }\n  }\n  csv += holiday + ',' + dateRange + ',' + content + '\\r\\n';\n}\n\nlet blob = new Blob(['\\ufeff' + csv], {\n  type: 'application/csv;charset=utf-8;',\n});\nlet elem = window.document.createElement('a');\nelem.href = window.URL.createObjectURL(blob);\nelem.download = 'holiday_' + moment().format('YYYY-MM-DD_HH-mm-ss') + '.csv';\ndocument.body.appendChild(elem);\nelem.click();\ndocument.body.removeChild(elem);\n\nfunction addZero(value, pos) {\n  let result = value.toString();\n  for (let i = result.length; i < pos; i++) {\n    result = '0' + result;\n  }\n  return result;\n}\n",
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "242cfe5f-944d-0300-282a-c437800f86d0"
              },
              {
                "name": "thingplus.action.multi-upload",
                "icon": "vertical_align_top",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"multi-upload-form\">\n  <form\n    #addEntityForm=\"ngForm\"\n    [formGroup]=\"addEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.multi-upload-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.apply-schedule</label>\n          </div>\n          <div\n            id=\"drop-area\"\n            (dragover)=\"onDragOver($event)\"\n            (dragenter)=\"onDragEnter($event)\"\n            (dragleave)=\"onDragLeave($event)\"\n            (drop)=\"onDrop($event)\"\n            [ngClass]=\"highlight\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n            fxLayoutGap=\"0.5em\"\n            *ngIf=\"src == ''\"\n          >\n            <svg class=\"icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 40 40\">\n              <path\n                d=\"M12.75 38a8.4 8.4 0 0 1-6.2-2.575A8.783 8.783 0 0 1 6.5 23.1a8.229 8.229 0 0 1 5.85-2.7 11.553 11.553 0 0 1 3.875-7.425A11.356 11.356 0 0 1 24.05 10a11.027 11.027 0 0 1 8.3 3.5 11.779 11.779 0 0 1 3.35 8.45v2.55h1.25a6.682 6.682 0 0 1 5 1.825A6.457 6.457 0 0 1 44 31.25a6.547 6.547 0 0 1-1.95 4.775A6.423 6.423 0 0 1 37.3 38H26a2.732 2.732 0 0 1-2.75-2.75V22.4l-4.65 4.7-1.15-1.1L24 19.5l6.55 6.5-1.15 1.1-4.65-4.7v12.85a1.116 1.116 0 0 0 .4.825 1.23 1.23 0 0 0 .85.375h11.25a5.2 5.2 0 0 0 3.675-8.875 5.009 5.009 0 0 0-3.675-1.525h-3.1v-4.1a10.216 10.216 0 0 0-2.95-7.325 9.654 9.654 0 0 0-7.25-3.075 9.758 9.758 0 0 0-7.25 3.075 10.127 10.127 0 0 0-3 7.325h-1.05a6.828 6.828 0 0 0-5 2.1 7.062 7.062 0 0 0-2.1 5.2 7.213 7.213 0 0 0 7.2 7.2h5.95V38zM24 24.75z\"\n                transform=\"translate(-4 -4)\"\n              />\n            </svg>\n            <span class=\"description\" [innerHtml]=\"t('thingplus.help.help-schedule-upload')\"></span>\n            <span class=\"details\" translate>thingplus.help.help-schedule-size</span>\n            <input type=\"file\" id=\"fileElem\" accept=\"text/*\" (change)=\"handleFiles($event)\" />\n            <label class=\"area-layout\" for=\"fileElem\"></label>\n          </div>\n          <div\n            class=\"preview-box\"\n            *ngIf=\"src != ''\"\n            fxLayout=\"column\"\n            fxLayoutAlign=\"center center\"\n            fxLayoutGap=\"0.8em\"\n          >\n            <button class=\"file-remove-btn\" (click)=\"removeSchedule($event)\" fxLayoutAlign=\"center center\">\n              <i class=\"material-icons\">close</i>\n            </button>\n            <svg class=\"preview-icon\" xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\">\n              <path\n                d=\"M14798-1046h-28v-36h17.169l10.834 10.834v7.166h-1.538v-6.468l-9.994-9.994h-14.933v32.925h24.927V-1053h1.535v7z\"\n                transform=\"translate(-14764.998 1084)\"\n              />\n              <path\n                d=\"M.432.04h4.077v-1.23H1.945v-1.423h2.2v-1.23h-2.2v-1.263h2.524v-1.23H.432zm8.5 0H10.5l-1.731-3.3 1.6-3.076H8.793l-1.02 2.173-1.019-2.173H5.178l1.6 3.076L5.042.04h1.577l1.154-2.373zm1.855-3.188a3.913 3.913 0 0 0 .653 2.477 2.309 2.309 0 0 0 1.959.823 2.292 2.292 0 0 0 2.548-2.333h-1.5c-.032.687-.39 1.095-1.043 1.095a.89.89 0 0 1-.8-.392 3.026 3.026 0 0 1-.287-1.67 3.026 3.026 0 0 1 .287-1.67.89.89 0 0 1 .8-.392c.653 0 1 .408 1.043 1.095h1.5a2.292 2.292 0 0 0-2.548-2.333 2.309 2.309 0 0 0-1.959.823 3.913 3.913 0 0 0-.657 2.477zM16.811.04h4.077v-1.23h-2.565v-1.423h2.2v-1.23h-2.2v-1.263h2.524v-1.23h-4.036zm4.945 0h4.077v-1.23h-2.565v-5.146h-1.513z\"\n                transform=\"translate(9.57 28.448)\"\n              />\n            </svg>\n            <div class=\"preview-name\">{{fileName}}</div>\n            <div class=\"preview-detail\">\n              {{'thingplus.help.help-apply-file' | translate:{'size': fileSize, 'type':fileType} }}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || addEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#multi-upload-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  word-break: keep-all;\n}\n#multi-upload-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#multi-upload-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#multi-upload-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .dialog-close i {\n  font-size: 1.4em;\n}\n#multi-upload-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#multi-upload-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#multi-upload-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#multi-upload-form .label-box {\n  color: var(--tb-service-font-4);\n  font-size: 1.2em;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .value-box {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  color: var(--tb-service-font-5);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#multi-upload-form .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#multi-upload-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#multi-upload-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#multi-upload-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#multi-upload-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#multi-upload-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#multi-upload-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#multi-upload-form #drop-area {\n  position: relative;\n  border: 1px solid var(--tb-service-border-0);\n  background: var(--tb-service-background-1);\n  width: 100%;\n  padding: 1em;\n  aspect-ratio: 420 / 180;\n  transition-property: border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form #drop-area.highlight {\n  border-color: var(--tb-service-accent);\n}\n#multi-upload-form #drop-area .icon {\n  width: 4em;\n  height: 4em;\n  fill: var(--tb-service-disabled);\n}\n#multi-upload-form #drop-area .description {\n  text-align: center;\n  color: var(--tb-service-font-4);\n  font-size: 1.4em;\n}\n#multi-upload-form #drop-area .description b {\n  color: var(--tb-service-accent);\n}\n#multi-upload-form #drop-area .details {\n  text-align: center;\n  color: var(--tb-service-font-2);\n  font-size: 1.2em;\n}\n#multi-upload-form #drop-area .area-layout {\n  position: absolute;\n  top: 0;\n  left: 0;\n  display: block;\n  width: 100%;\n  height: 100%;\n  cursor: pointer;\n}\n#multi-upload-form #fileElem {\n  display: none;\n}\n#multi-upload-form .preview-box {\n  position: relative;\n  width: 100%;\n  aspect-ratio: 250 / 64;\n  border: 1px dashed var(--tb-service-border-3);\n}\n#multi-upload-form .preview-icon {\n  width: 4em;\n  height: 4em;\n  fill: var(--tb-service-accent);\n}\n#multi-upload-form .preview-name {\n  font-size: 1.4em;\n  color: var(--tb-service-font-4);\n}\n#multi-upload-form .preview-detail {\n  font-size: 1.2em;\n  color: var(--tb-service-font-2);\n}\n#multi-upload-form .file-remove-btn {\n  all: unset;\n  position: absolute;\n  top: 1em;\n  right: 1em;\n  padding: 0.3em;\n  border-radius: 50%;\n  background-color: var(--tb-service-font-4);\n  cursor: pointer;\n}\n#multi-upload-form .file-remove-btn i {\n  font-size: 1.4em;\n  color: var(--tb-service-font-0);\n}\n#multi-upload-form .preview {\n  max-width: 100%;\n  max-height: 100%;\n  width: auto;\n  height: 50%;\n}\n\n#multi-upload-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#multi-upload-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#multi-upload-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#multi-upload-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#multi-upload-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#multi-upload-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#multi-upload-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#multi-upload-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #multi-upload-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst MINUTE_MS = 60000;\nconst HOUR_MS = 60 * MINUTE_MS;\n\nconst t = widgetContext.custom.t;\n\nopenAddEntityDialog();\n\nfunction openAddEntityDialog() {\n  customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.dashboardList = [];\n  vm.src = '';\n  vm.t = t;\n  vm.highlight = '';\n  vm.newInfo = [];\n\n  vm.addEntityFormGroup = vm.fb.group({});\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = async function () {\n    vm.addEntityFormGroup.markAsPristine();\n    getAttribute().subscribe(datas => {\n      saveAttribute(datas).subscribe(() => {\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n      });\n    });\n  };\n  vm.onDragOver = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = 'highlight';\n  };\n  vm.onDragEnter = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = 'highlight';\n  };\n  vm.onDragLeave = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = '';\n  };\n  vm.onDrop = function (e) {\n    e.preventDefault();\n    e.stopPropagation();\n    vm.highlight = '';\n    vm.handleFiles(e, true);\n  };\n  vm.removeSchedule = function (e) {\n    vm.src = '';\n  };\n  vm.handleFiles = function (e, isDrag) {\n    let files;\n    if (isDrag) {\n      files = e.dataTransfer.files;\n    } else {\n      files = e.target.files;\n    }\n    vm.fileName = files[0].name;\n    vm.fileType = files[0].type;\n    vm.fileSize = files[0].size;\n\n    if (vm.fileSize > 512 * 1024) {\n      window.alert(t('thingplus.help.error-big-schedule'));\n      return;\n    }\n    let reader = new FileReader();\n    reader.readAsText(files[0]);\n    reader.onloadend = function () {\n      vm.src = reader.result;\n\n      let rows = vm.src.split('\\r\\n');\n      rows = rows.slice(1);\n      for (let i in rows) {\n        if (rows[i] && rows[i] != '') {\n          let data = rows[i].split(',');\n          let date = [0, 0];\n          let isAlways = false;\n          let applyDate = ['', ''];\n          if (!/^[0-9]{1,2}-[0-9]{1,2}$/.test(data[0])) {\n            continue;\n          }\n          if (/^[0-9]{1,2}-[0-9]{1,2}$/.test(data[0])) {\n            let temp = data[0].split('-');\n            date[0] = Number(temp[0]);\n            date[1] = Number(temp[1]);\n            if (date[0] > 12 || date[1] > 31 || date[0] < 1 || date[1] < 1) {\n              continue;\n            }\n            if (date[0] == 2 && date[1] > 29) {\n              continue;\n            }\n            if ([4, 6, 9, 11].includes(date[0]) && date[1] > 30) {\n              continue;\n            }\n          }\n          if (data[1].toLowerCase() == 'always') {\n            isAlways = true;\n          } else if (/^[0-9]{4}-[0-9]{4}$/.test(data[1])) {\n            applyDate = data[1].split('-');\n          } else if (/^[0-9]{4}$/.test(data[1])) {\n            applyDate = [data[1], data[1]];\n          } else {\n            continue;\n          }\n          date = date.join('-');\n          vm.newInfo.push({\n            date: date,\n            isAlways: isAlways,\n            startYear: applyDate[0],\n            endYear: applyDate[1],\n            content: data[2],\n          });\n        }\n      }\n    };\n  };\n\n  function getAttribute() {\n    return attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', ['plannedHoliday']);\n  }\n\n  function saveAttribute(datas) {\n    let originData = [];\n    if (datas && datas[0]) {\n      originData = datas[0].value;\n    }\n\n    for (let i in vm.newInfo) {\n      let targetIndex = originData.findIndex(x => x.date == vm.newInfo[i].date);\n      if (targetIndex != -1) {\n        originData[targetIndex] = vm.newInfo[i];\n      } else {\n        originData.push(vm.newInfo[i]);\n      }\n    }\n\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', [\n      {\n        key: 'plannedHoliday',\n        value: originData,\n      },\n    ]);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "f95dbfcb-fc78-1deb-be97-939395b295e2"
              },
              {
                "name": "thingplus.action.add",
                "icon": "insert_invitation",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"add-holiday-form\">\n  <form\n    #addEntityForm=\"ngForm\"\n    [formGroup]=\"addEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.create-holiday-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.select-holiday</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <mat-datetimepicker #targetDatePicker type=\"date\"></mat-datetimepicker>\n            <input\n              class=\"hidden\"\n              matInput\n              readonly\n              [(ngModel)]=\"targetDate\"\n              [matDatetimepicker]=\"targetDatePicker\"\n              (ngModelChange)=\"setTargetDate($event)\"\n              [ngModelOptions]=\"{standalone: true}\"\n            />\n            <input\n              class=\"target-date\"\n              (click)=\"targetDatePicker.open()\"\n              [(ngModel)]=\"viewTargetDate\"\n              [ngModelOptions]=\"{standalone: true}\"\n              readonly\n            />\n            <div class=\"select-arrow\"></div>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.repeat-holiday</label>\n          </div>\n          <div class=\"value-box no-border\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <button\n              class=\"radio-btn\"\n              type=\"button\"\n              fxFlex\n              [ngClass]=\"{'active': addEntityFormGroup.get('isAlways').value == true}\"\n              (click)=\"setIsAlways($event, true)\"\n              translate\n            >\n              thingplus.label.every-year\n            </button>\n            <button\n              class=\"radio-btn\"\n              type=\"button\"\n              fxFlex\n              [ngClass]=\"{'active': addEntityFormGroup.get('isAlways').value != true}\"\n              (click)=\"setIsAlways($event, false)\"\n              translate\n            >\n              thingplus.label.set-range\n            </button>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start end\">\n        <div\n          fxFlex\n          fxLayout=\"column\"\n          fxLayoutAlign=\"end stretch\"\n          fxLayoutGap=\"0.6em\"\n          class=\"input-box\"\n          [ngClass]=\"{'disabled': addEntityFormGroup.get('isAlways').value == true}\"\n        >\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.date-range</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.6em\">\n            <mat-select\n              formControlName=\"startYear\"\n              (selectionChange)=\"setStartYear($event)\"\n              [disabled]=\"addEntityFormGroup.get('isAlways').value == true\"\n            >\n              <mat-option *ngFor=\"let startYear of startYearList\" [value]=\"startYear.value\">\n                {{startYear.name}}\n              </mat-option>\n            </mat-select>\n          </div>\n        </div>\n        <div\n          fxFlex\n          fxLayout=\"column\"\n          fxLayoutAlign=\"end stretch\"\n          fxLayoutGap=\"0.6em\"\n          class=\"input-box\"\n          [ngClass]=\"{'disabled': addEntityFormGroup.get('isAlways').value == true}\"\n        >\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label> </label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.6em\">\n            <mat-select\n              formControlName=\"endYear\"\n              (selectionChange)=\"setEndYear($event)\"\n              [disabled]=\"addEntityFormGroup.get('isAlways').value == true\"\n            >\n              <mat-option *ngFor=\"let endYear of endYearList\" [value]=\"endYear.value\"> {{endYear.name}} </mat-option>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.content</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <input matInput formControlName=\"content\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || addEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#add-holiday-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#add-holiday-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#add-holiday-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#add-holiday-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#add-holiday-form .dialog-close i {\n  font-size: 1.4em;\n}\n#add-holiday-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#add-holiday-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#add-holiday-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#add-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#add-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n/* Date Controller */\n#add-holiday-form .date-controller {\n  margin-right: var(--tb-config-padding);\n}\n#add-holiday-form .date-selector {\n  position: relative;\n  width: 100%;\n  line-height: 1;\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  padding: 0.6em 0.9em;\n  cursor: pointer;\n  transition-property: border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#add-holiday-form .date-selector:hover {\n  border-color: var(--tb-service-border-3);\n}\n#add-holiday-form .date-selector input {\n  font-family: var(--tb-config-font-family);\n  font-size: 1.4em;\n  font-weight: 300;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  line-height: 1.3;\n}\n#add-holiday-form .select-arrow {\n  border-left: 0.5em solid transparent;\n  border-right: 0.5em solid transparent;\n  border-top: 0.5em solid;\n  margin-right: 1.6em;\n  color: var(--tb-service-accent);\n}\n#add-holiday-form .target-date {\n  all: unset;\n  width: 100%;\n  cursor: pointer;\n}\n#add-holiday-form .hidden {\n  visibility: hidden;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n#add-holiday-form .label-box {\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n  line-height: 1;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#add-holiday-form .input-box.disabled .label-box {\n  color: var(--tb-service-font-1);\n}\n#add-holiday-form .value-box {\n  position: relative;\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#add-holiday-form .value-box.no-border {\n  border: none !important;\n}\n\n#add-holiday-form .input-box:not(.disabled) .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#add-holiday-form .input-box:not(.disabled) .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#add-holiday-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#add-holiday-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#add-holiday-form .input-box.disabled .value-box {\n  background-color: var(--tb-service-background-1);\n}\n#add-holiday-form .input-box.disabled .value-box input {\n  color: var(--tb-service-font-2);\n  cursor: default;\n}\n#add-holiday-form .radio-btn {\n  all: unset;\n  color: var(--tb-service-font-5);\n  border: 1px solid var(--tb-service-border-0);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  cursor: pointer;\n}\n#add-holiday-form .input-box:not(.disabled) .radio-btn:not(.active):hover {\n  border-color: var(--tb-service-border-3);\n}\n#add-holiday-form .input-box:not(.disabled) .radio-btn.active {\n  color: var(--tb-service-accent);\n  border-color: var(--tb-service-accent);\n}\n#add-holiday-form .input-box.disabled .radio-btn:not(.active) {\n  color: var(--tb-service-font-1);\n  cursor: default;\n}\n#add-holiday-form .input-box.disabled .radio-btn.active {\n  border-color: var(--tb-service-border-3);\n  cursor: default;\n}\n#add-holiday-form .value-box .mat-select-trigger {\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  line-height: 1;\n}\n#add-holiday-form .value-box .mat-select-value {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  font-size: 1em;\n  color: var(--tb-service-font-5);\n}\n#add-holiday-form .value-box .mat-select-arrow {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  border-left: 0.4em solid transparent;\n  border-right: 0.4em solid transparent;\n  border-top: 0.4em solid;\n  color: var(--tb-service-accent);\n}\n#add-holiday-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#add-holiday-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#add-holiday-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#add-holiday-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#add-holiday-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#add-holiday-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#add-holiday-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#add-holiday-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#add-holiday-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#add-holiday-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#add-holiday-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#add-holiday-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #add-holiday-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet userService = $injector.get(widgetContext.servicesMap.get('userService'));\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst t = widgetContext.custom.t;\n\nopenAddEntityDialog();\n\nfunction openAddEntityDialog() {\n  customDialog.customDialog(htmlTemplate, AddEntityDialogController).subscribe();\n}\n\nfunction AddEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.ownerLevel = widgetContext.$scope.ownerLevel;\n  vm.t = t;\n  let now = moment().toDate();\n  vm.nowYear = moment(now).year();\n  vm.startYearList = [];\n  vm.endYearList = [];\n  for (let i = vm.nowYear; i < vm.nowYear + 100; i++) {\n    vm.startYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n    vm.endYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n  }\n  vm.targetDate = now;\n  vm.viewTargetDate = moment(now).format('YYYY-MM-DD');\n  vm.holiday = [];\n\n  vm.addEntityFormGroup = vm.fb.group({\n    targetDate: [now],\n    isAlways: [true],\n    startYear: [vm.nowYear],\n    endYear: [vm.nowYear],\n    content: [''],\n  });\n\n  loadAttribute();\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = async function () {\n    vm.addEntityFormGroup.markAsPristine();\n    loadAttribute().subscribe(datas => {\n      if (datas && datas[0]) {\n        vm.holiday = datas[0].value;\n      }\n      saveAttribute().subscribe(() => {\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n      });\n    });\n  };\n\n  vm.setIsAlways = function (e, value) {\n    vm.addEntityFormGroup.patchValue(\n      {\n        isAlways: value,\n      },\n      { emitEvent: false }\n    );\n  };\n  vm.setStartYear = function (e) {\n    let endYear = vm.addEntityFormGroup.get('endYear').value;\n    vm.endYearList = [];\n    for (let i = e.value; i <= vm.nowYear + 100; i++) {\n      vm.endYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n    }\n    if (endYear < e.value) {\n      vm.addEntityFormGroup.patchValue(\n        {\n          endYear: e.value,\n        },\n        { emitEvent: false }\n      );\n    }\n  };\n  vm.setEndYear = function (e) {\n    let startYear = vm.addEntityFormGroup.get('startYear').value;\n    vm.startYearList = [];\n    for (let i = vm.nowYear; i <= e.value; i++) {\n      vm.startYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n    }\n    if (startYear > e.value) {\n      vm.addEntityFormGroup.patchValue(\n        {\n          startYear: e.value,\n        },\n        { emitEvent: false }\n      );\n    }\n  };\n  vm.setTargetDate = function (e) {\n    vm.addEntityFormGroup.patchValue(\n      {\n        targetDate: e,\n      },\n      { emitEvent: false }\n    );\n    vm.viewTargetDate = moment(e).format('YYYY-MM-DD');\n  };\n\n  function loadAttribute() {\n    return widgetContext.attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', ['plannedHoliday']);\n  }\n\n  function saveAttribute() {\n    let targetDate = vm.addEntityFormGroup.get('targetDate').value;\n    let isAlways = vm.addEntityFormGroup.get('isAlways').value;\n    let startYear = vm.addEntityFormGroup.get('startYear').value;\n    let endYear = vm.addEntityFormGroup.get('endYear').value;\n    let content = vm.addEntityFormGroup.get('content').value;\n\n    if (isAlways) {\n      startYear = '';\n      endYear = '';\n    }\n\n    let newHoliday = {\n      date: moment(targetDate).format('MM-DD'),\n      isAlways: isAlways,\n      startYear: startYear,\n      endYear: endYear,\n      content: content,\n    };\n    let targetIndex = vm.holiday.findIndex(item => item.date == newHoliday.date);\n    if (targetIndex != -1) {\n      vm.holiday.splice(targetIndex, 1);\n    }\n    vm.holiday.push(newHoliday);\n    vm.holiday.sort((a, b) => {\n      return a.date > b.date ? 1 : -1;\n    });\n    let attributeBody = [{ key: 'plannedHoliday', value: vm.holiday }];\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "9ba313c0-eb0e-aa71-7c47-34979b7a508a"
              }
            ],
            "actionCellButton": [
              {
                "name": "edit",
                "icon": "edit",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"edit-holiday-form\">\n  <form\n    #editEntityForm=\"ngForm\"\n    [formGroup]=\"editEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.edit-holiday-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 0.4em\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\" fxLayoutGap=\"2em\">\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.select-holiday</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <mat-datetimepicker #targetDatePicker type=\"date\"></mat-datetimepicker>\n            <input\n              class=\"hidden\"\n              matInput\n              readonly\n              [(ngModel)]=\"targetDate\"\n              [matDatetimepicker]=\"targetDatePicker\"\n              (ngModelChange)=\"setTargetDate($event)\"\n              [ngModelOptions]=\"{standalone: true}\"\n            />\n            <input\n              class=\"target-date\"\n              (click)=\"targetDatePicker.open()\"\n              [(ngModel)]=\"viewTargetDate\"\n              [ngModelOptions]=\"{standalone: true}\"\n              readonly\n            />\n            <div class=\"select-arrow\"></div>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex=\"100\" fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.repeat-holiday</label>\n          </div>\n          <div class=\"value-box no-border\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <button\n              class=\"radio-btn\"\n              type=\"button\"\n              fxFlex\n              [ngClass]=\"{'active': editEntityFormGroup.get('isAlways').value == true}\"\n              (click)=\"setIsAlways($event, true)\"\n              translate\n            >\n              thingplus.label.every-year\n            </button>\n            <button\n              class=\"radio-btn\"\n              type=\"button\"\n              fxFlex\n              [ngClass]=\"{'active': editEntityFormGroup.get('isAlways').value != true}\"\n              (click)=\"setIsAlways($event, false)\"\n              translate\n            >\n              thingplus.label.set-range\n            </button>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start end\">\n        <div\n          fxFlex\n          fxLayout=\"column\"\n          fxLayoutAlign=\"end stretch\"\n          fxLayoutGap=\"0.6em\"\n          class=\"input-box\"\n          [ngClass]=\"{'disabled': editEntityFormGroup.get('isAlways').value == true}\"\n        >\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.date-range</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.6em\">\n            <mat-select\n              formControlName=\"startYear\"\n              (selectionChange)=\"setStartYear($event)\"\n              [disabled]=\"editEntityFormGroup.get('isAlways').value == true\"\n            >\n              <mat-option *ngFor=\"let startYear of startYearList\" [value]=\"startYear.value\">\n                {{startYear.name}}\n              </mat-option>\n            </mat-select>\n          </div>\n        </div>\n        <div\n          fxFlex\n          fxLayout=\"column\"\n          fxLayoutAlign=\"end stretch\"\n          fxLayoutGap=\"0.6em\"\n          class=\"input-box\"\n          [ngClass]=\"{'disabled': editEntityFormGroup.get('isAlways').value == true}\"\n        >\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label> </label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"space-between center\" fxLayoutGap=\"0.6em\">\n            <mat-select\n              formControlName=\"endYear\"\n              (selectionChange)=\"setEndYear($event)\"\n              [disabled]=\"editEntityFormGroup.get('isAlways').value == true\"\n            >\n              <mat-option *ngFor=\"let endYear of endYearList\" [value]=\"endYear.value\"> {{endYear.name}} </mat-option>\n            </mat-select>\n          </div>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutGap=\"1em\" fxLayoutAlign=\"start center\">\n        <div fxFlex fxLayout=\"column\" fxLayoutGap=\"0.6em\" class=\"input-box\">\n          <div class=\"label-box\" fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.4em\">\n            <label translate>thingplus.label.content</label>\n          </div>\n          <div class=\"value-box\" fxFlex fxLayout=\"row\" fxLayoutAlign=\"start center\" fxLayoutGap=\"0.6em\">\n            <input matInput formControlName=\"content\" />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button save-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || editEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.save\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#edit-holiday-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#edit-holiday-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#edit-holiday-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#edit-holiday-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-holiday-form .dialog-close i {\n  font-size: 1.4em;\n}\n#edit-holiday-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#edit-holiday-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#edit-holiday-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#edit-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#edit-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n/* Date Controller */\n#edit-holiday-form .date-controller {\n  margin-right: var(--tb-config-padding);\n}\n#edit-holiday-form .date-selector {\n  position: relative;\n  width: 100%;\n  line-height: 1;\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  padding: 0.6em 0.9em;\n  cursor: pointer;\n  transition-property: border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-holiday-form .date-selector:hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-holiday-form .date-selector input {\n  font-family: var(--tb-config-font-family);\n  font-size: 1.4em;\n  font-weight: 300;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  line-height: 1.3;\n}\n#edit-holiday-form .select-arrow {\n  border-left: 0.5em solid transparent;\n  border-right: 0.5em solid transparent;\n  border-top: 0.5em solid;\n  margin-right: 1.6em;\n  color: var(--tb-service-accent);\n}\n#edit-holiday-form .target-date {\n  all: unset;\n  width: 100%;\n  cursor: pointer;\n}\n#edit-holiday-form .hidden {\n  visibility: hidden;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n}\n\n#edit-holiday-form .label-box {\n  color: var(--tb-service-font-3);\n  font-size: 1.2em;\n  line-height: 1;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-holiday-form .input-box.disabled .label-box {\n  color: var(--tb-service-font-1);\n}\n#edit-holiday-form .value-box {\n  position: relative;\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-holiday-form .value-box.no-border {\n  border: none !important;\n}\n\n#edit-holiday-form .input-box:not(.disabled) .value-box:hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-holiday-form .input-box:not(.disabled) .value-box:focus-within {\n  border-color: var(--tb-service-accent);\n  caret-color: var(--tb-service-accent);\n}\n#edit-holiday-form .value-box *::placeholder {\n  color: var(--tb-service-font-4);\n}\n#edit-holiday-form .value-box input {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  caret-color: var(--tb-service-accent);\n}\n#edit-holiday-form .input-box.disabled .value-box {\n  background-color: var(--tb-service-background-1);\n}\n#edit-holiday-form .input-box.disabled .value-box input {\n  color: var(--tb-service-font-2);\n  cursor: default;\n}\n#edit-holiday-form .radio-btn {\n  all: unset;\n  color: var(--tb-service-font-5);\n  border: 1px solid var(--tb-service-border-0);\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  cursor: pointer;\n}\n#edit-holiday-form .input-box:not(.disabled) .radio-btn:not(.active):hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-holiday-form .input-box:not(.disabled) .radio-btn.active {\n  color: var(--tb-service-accent);\n  border-color: var(--tb-service-accent);\n}\n#edit-holiday-form .input-box.disabled .radio-btn:not(.active) {\n  color: var(--tb-service-font-1);\n  cursor: default;\n}\n#edit-holiday-form .input-box.disabled .radio-btn.active {\n  border-color: var(--tb-service-border-3);\n  cursor: default;\n}\n#edit-holiday-form .value-box .mat-select-trigger {\n  font-size: 1.4em;\n  padding: calc(16em / 14);\n  line-height: 1;\n}\n#edit-holiday-form .value-box .mat-select-value {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  font-size: 1em;\n  color: var(--tb-service-font-5);\n}\n#edit-holiday-form .value-box .mat-select-arrow {\n  font-family: var(--tb-config-font-family);\n  font-weight: 300;\n  border-left: 0.4em solid transparent;\n  border-right: 0.4em solid transparent;\n  border-top: 0.4em solid;\n  color: var(--tb-service-accent);\n}\n#edit-holiday-form .error-box {\n  display: none;\n  color: var(--tb-service-warn);\n  font-size: 1.2em;\n}\n#edit-holiday-form .input-box.error .label-box {\n  color: var(--tb-service-warn);\n}\n#edit-holiday-form .input-box.error .value-box {\n  border: 1px solid var(--tb-service-warn);\n}\n#edit-holiday-form .input-box.error .error-box {\n  display: block;\n  margin-top: calc(0.6em / 1.2);\n}\n\n#edit-holiday-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#edit-holiday-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#edit-holiday-form .save-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-accent);\n}\n#edit-holiday-form .save-button:hover {\n  background-color: var(--tb-service-accent-hover);\n}\n#edit-holiday-form .save-button:active {\n  background-color: var(--tb-service-accent-pressed);\n}\n#edit-holiday-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#edit-holiday-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#edit-holiday-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #edit-holiday-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet userService = $injector.get(widgetContext.servicesMap.get('userService'));\nlet entityRelationService = $injector.get(widgetContext.servicesMap.get('entityRelationService'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst t = widgetContext.custom.t;\n\nopenEditEntityDialog();\n\nfunction openEditEntityDialog() {\n  customDialog.customDialog(htmlTemplate, EditEntityDialogController).subscribe();\n}\n\nfunction EditEntityDialogController(instance) {\n  let vm = instance;\n  vm.ownerId = widgetContext.defaultSubscription.configuredDatasources[0].entity.id;\n  vm.ownerLevel = widgetContext.$scope.ownerLevel;\n  vm.t = t;\n  let month = additionalParams.date.split('-')[0];\n  let date = additionalParams.date.split('-')[1];\n  let now = moment().toDate();\n  let origin = moment()\n    .month(month - 1)\n    .date(date)\n    .toDate();\n  vm.nowYear = moment(now).year();\n  vm.startYearList = [];\n  vm.endYearList = [];\n  let startYear = vm.nowYear;\n  if (additionalParams.startYear) {\n    startYear = Number(additionalParams.startYear);\n  }\n  let endYear = vm.nowYear;\n  if (additionalParams.endYear) {\n    endYear = Number(additionalParams.endYear);\n  }\n\n  for (let i = vm.nowYear; i <= endYear; i++) {\n    vm.startYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n  }\n  for (let i = startYear; i <= vm.nowYear + 100; i++) {\n    vm.endYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n  }\n  vm.targetDate = origin;\n  vm.viewTargetDate = moment(origin).format('YYYY-MM-DD');\n  vm.holiday = [];\n\n  vm.editEntityFormGroup = vm.fb.group({\n    targetDate: [origin],\n    isAlways: [additionalParams.isAlways],\n    startYear: [startYear],\n    endYear: [endYear],\n    content: [additionalParams.content],\n  });\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = async function () {\n    vm.editEntityFormGroup.markAsPristine();\n    loadAttribute().subscribe(datas => {\n      if (datas && datas[0]) {\n        vm.holiday = datas[0].value;\n      }\n      saveAttribute().subscribe(() => {\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n      });\n    });\n  };\n\n  vm.setIsAlways = function (e, value) {\n    vm.editEntityFormGroup.patchValue(\n      {\n        isAlways: value,\n      },\n      { emitEvent: false }\n    );\n  };\n  vm.setStartYear = function (e) {\n    let endYear = vm.editEntityFormGroup.get('endYear').value;\n    vm.endYearList = [];\n    for (let i = e.value; i <= vm.nowYear + 100; i++) {\n      vm.endYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n    }\n    if (endYear < e.value) {\n      vm.editEntityFormGroup.patchValue(\n        {\n          endYear: e.value,\n        },\n        { emitEvent: false }\n      );\n    }\n  };\n  vm.setEndYear = function (e) {\n    let startYear = vm.editEntityFormGroup.get('startYear').value;\n    vm.startYearList = [];\n    for (let i = vm.nowYear; i <= e.value; i++) {\n      vm.startYearList.push({ name: t('thingplus.time-format.year-value', { year: i }), value: i });\n    }\n    if (startYear > e.value) {\n      vm.editEntityFormGroup.patchValue(\n        {\n          startYear: e.value,\n        },\n        { emitEvent: false }\n      );\n    }\n  };\n  vm.setTargetDate = function (e) {\n    vm.editEntityFormGroup.patchValue(\n      {\n        targetDate: e,\n      },\n      { emitEvent: false }\n    );\n    vm.viewTargetDate = moment(e).format('YYYY-MM-DD');\n  };\n\n  function loadAttribute() {\n    let entityId = widgetContext.custom.ownerDatasource.entity.id;\n    return widgetContext.attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', ['plannedHoliday']);\n  }\n\n  function saveAttribute() {\n    let entityId = widgetContext.custom.ownerDatasource.entity.id;\n    let targetDate = vm.editEntityFormGroup.get('targetDate').value;\n    let isAlways = vm.editEntityFormGroup.get('isAlways').value;\n    let startYear = vm.editEntityFormGroup.get('startYear').value;\n    let endYear = vm.editEntityFormGroup.get('endYear').value;\n    let content = vm.editEntityFormGroup.get('content').value;\n\n    if (isAlways) {\n      startYear = '';\n      endYear = '';\n    }\n\n    let newHoliday = {\n      date: moment(targetDate).format('MM-DD'),\n      isAlways: isAlways,\n      startYear: startYear,\n      endYear: endYear,\n      content: content,\n    };\n    let targetIndex = vm.holiday.findIndex(item => item.date == additionalParams.date);\n    if (targetIndex != -1) {\n      vm.holiday.splice(targetIndex, 1);\n    }\n    targetIndex = vm.holiday.findIndex(item => item.date == newHoliday.date);\n    if (targetIndex != -1) {\n      vm.holiday.splice(targetIndex, 1);\n    }\n    vm.holiday.push(newHoliday);\n    vm.holiday.sort((a, b) => {\n      return a.date > b.date ? 1 : -1;\n    });\n    let attributeBody = [{ key: 'plannedHoliday', value: vm.holiday }];\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "becd47d3-2ea3-efbe-a834-d7c6fdbb4895"
              },
              {
                "name": "delete",
                "icon": "delete",
                "useShowWidgetActionFunction": null,
                "showWidgetActionFunction": "return true;",
                "type": "customPretty",
                "customHtml": "<div id=\"delete-holiday-form\">\n  <form\n    #deleteEntityForm=\"ngForm\"\n    [formGroup]=\"deleteEntityFormGroup\"\n    (ngSubmit)=\"save()\"\n    style=\"font-size: {{calcFontSize()}}px;\"\n  >\n    <div class=\"dialog-title-box\" fxLayoutAlign=\"space-between center\">\n      <span class=\"dialog-title\" translate>thingplus.dialog.delete-holiday-title</span>\n      <button class=\"dialog-close\" (click)=\"cancel()\" type=\"button\">\n        <mat-icon class=\"material-icons\">close</mat-icon>\n      </button>\n    </div>\n    <mat-progress-bar color=\"warn\" mode=\"indeterminate\" *ngIf=\"isLoading$ | async\"> </mat-progress-bar>\n    <div style=\"height: 4px\" *ngIf=\"!(isLoading$ | async)\"></div>\n    <div mat-dialog-content fxLayout=\"column\">\n      <div fxLayout=\"row\" fxLayoutGap=\"8px\" fxLayout.xs=\"column\" fxLayoutGap.xs=\"0\">\n        <div class=\"label\">{{'thingplus.dialog.delete-holiday-content' | translate:{date: date} }}</div>\n      </div>\n    </div>\n    <div mat-dialog-actions fxLayout=\"row\" fxLayoutAlign=\"end center\" fxLayoutGap=\"1em\">\n      <button\n        class=\"button close-button\"\n        [disabled]=\"(isLoading$ | async)\"\n        type=\"button\"\n        (click)=\"cancel()\"\n        cdkFocusInitial\n        translate\n      >\n        thingplus.action.close\n      </button>\n      <button\n        class=\"button delete-button\"\n        type=\"submit\"\n        [disabled]=\"(isLoading$ | async) || deleteEntityForm.invalid\"\n        translate\n      >\n        thingplus.action.delete\n      </button>\n    </div>\n  </form>\n</div>\n",
                "customCss": "#delete-holiday-form form {\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#delete-holiday-form .dialog-title-box {\n  padding: 2em;\n  border-bottom: 1px solid var(--tb-service-border-1);\n}\n#delete-holiday-form .dialog-title {\n  color: var(--tb-service-font-5);\n  font-size: 1.6em;\n}\n#delete-holiday-form .dialog-close {\n  all: unset;\n  cursor: pointer;\n  color: var(--tb-service-font-3);\n  transition-property: color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#delete-holiday-form .dialog-close i {\n  font-size: 1.4em;\n}\n#delete-holiday-form .dialog-close:hover {\n  color: var(--tb-service-font-5);\n}\n\n#delete-holiday-form .mat-dialog-content {\n  padding: var(--tb-config-padding) !important;\n}\n#delete-holiday-form .mat-dialog-content::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n}\n#delete-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb {\n  border: 2px solid #00000000;\n  background-clip: padding-box;\n  background-color: var(--tb-service-accent);\n}\n#delete-holiday-form .mat-dialog-content::-webkit-scrollbar-thumb:hover {\n  border: 1px solid #00000000;\n}\n\n#delete-holiday-form .label {\n  color: var(--tb-service-font-5);\n  font-size: 1.4em;\n}\n\n#delete-holiday-form .mat-dialog-actions {\n  padding: 2em;\n  border-top: 1px solid var(--tb-service-border-1);\n}\n#delete-holiday-form .button {\n  all: unset;\n  padding: 0.6em 1.4em;\n  font-size: 1.4em;\n  box-sizing: border-box;\n  cursor: pointer;\n  transition-property: color, background-color, border-color;\n  transition-duration: var(--tb-config-color-duration);\n}\n#delete-holiday-form .delete-button {\n  color: var(--tb-service-font-0);\n  background-color: var(--tb-service-warn);\n}\n#delete-holiday-form .delete-button:hover {\n  background-color: var(--tb-service-warn-hover);\n}\n#delete-holiday-form .delete-button:active {\n  background-color: var(--tb-service-warn-pressed);\n}\n#delete-holiday-form .close-button {\n  color: var(--tb-service-font-5);\n  background-color: var(--tb-service-background-0);\n  border: 1px solid var(--tb-service-border-0);\n}\n#delete-holiday-form .close-button:hover {\n  border-color: var(--tb-service-border-3);\n}\n#delete-holiday-form .close-button:active {\n  background-color: var(--tb-service-border-0);\n}\n\n@media (min-width: 960px) {\n  #delete-holiday-form form {\n    width: 24vw;\n  }\n}\n",
                "customFunction": "let $injector = widgetContext.$scope.$injector;\nlet dialogs = $injector.get(widgetContext.servicesMap.get('dialogs'));\nlet customDialog = $injector.get(widgetContext.servicesMap.get('customDialog'));\nlet attributeService = $injector.get(widgetContext.servicesMap.get('attributeService'));\n\nconst t = widgetContext.custom.t;\n\nopenDeleteEntityDialog();\n\nfunction openDeleteEntityDialog() {\n  customDialog.customDialog(htmlTemplate, DeleteEntityDialogController).subscribe();\n}\n\nfunction DeleteEntityDialogController(instance) {\n  let vm = instance;\n  vm.deleteEntityFormGroup = vm.fb.group({});\n  vm.holiday = [];\n  let month = additionalParams.date.split('-')[0];\n  let date = additionalParams.date.split('-')[1];\n  vm.date = t('thingplus.time-format.md-value', { month, date });\n\n  vm.calcFontSize = function () {\n    const originWidth = widgetContext.settings.widget.originWidth;\n    let widgetFontSize = _.round((widgetContext.width / originWidth) * 10, 2);\n    if (widgetFontSize < 6.25) {\n      widgetFontSize = 6.25;\n    }\n    return widgetFontSize;\n  };\n  vm.cancel = function () {\n    vm.dialogRef.close(null);\n  };\n  vm.save = async function () {\n    vm.deleteEntityFormGroup.markAsPristine();\n    loadAttribute().subscribe(datas => {\n      if (datas && datas[0]) {\n        vm.holiday = datas[0].value;\n      }\n      saveAttribute().subscribe(() => {\n        widgetContext.updateAliases();\n        vm.dialogRef.close(null);\n      });\n    });\n  };\n\n  function loadAttribute() {\n    let entityId = widgetContext.custom.ownerDatasource.entity.id;\n    return widgetContext.attributeService.getEntityAttributes(entityId, 'SERVER_SCOPE', ['plannedHoliday']);\n  }\n\n  function saveAttribute() {\n    let entityId = widgetContext.custom.ownerDatasource.entity.id;\n\n    let targetIndex = vm.holiday.findIndex(item => item.date == additionalParams.date);\n    if (targetIndex != -1) {\n      vm.holiday.splice(targetIndex, 1);\n    }\n\n    let attributeBody = [{ key: 'plannedHoliday', value: vm.holiday }];\n    return attributeService.saveEntityAttributes(entityId, 'SERVER_SCOPE', attributeBody);\n  }\n}\n",
                "customResources": [],
                "openInSeparateDialog": false,
                "openInPopover": false,
                "id": "a64aa4c0-7fd1-0446-ad24-5e635030997c"
              }
            ]
          }
        },
        "row": 0,
        "col": 0,
        "id": "547dac1b-67f5-a33f-f6a1-3d36f47229f6"
      }
    },
    "states": {
      "schedule-custom": {
        "name": "{i18n:thingplus.menu.schedule-management}",
        "root": true,
        "layouts": {
          "main": {
            "widgets": {
              "355fe703-2da5-b178-723d-cbd8a09ed703": {
                "sizeX": 95,
                "sizeY": 43,
                "row": 1,
                "col": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "var(--tb-service-background-4)",
              "columns": 97,
              "margin": 0,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "backgroundImageUrl": null,
              "mobileAutoFillHeight": true,
              "mobileRowHeight": 70
            }
          }
        }
      },
      "schedule-holiday": {
        "name": "{i18n:thingplus.menu.schedule-management}",
        "root": false,
        "layouts": {
          "main": {
            "widgets": {
              "547dac1b-67f5-a33f-f6a1-3d36f47229f6": {
                "sizeX": 95,
                "sizeY": 43,
                "row": 1,
                "col": 1
              }
            },
            "gridSettings": {
              "backgroundColor": "var(--tb-service-background-4)",
              "columns": 97,
              "margin": 0,
              "backgroundSizeMode": "100%",
              "autoFillHeight": true,
              "backgroundImageUrl": null,
              "mobileAutoFillHeight": true,
              "mobileRowHeight": 70
            }
          }
        }
      }
    },
    "entityAliases": {
      "b5d25b86-8be5-8557-d416-a6d92109a9aa": {
        "id": "b5d25b86-8be5-8557-d416-a6d92109a9aa",
        "alias": "Current User Owner",
        "filter": {
          "type": "singleEntity",
          "resolveMultiple": false,
          "singleEntity": {
            "entityType": "CURRENT_CUSTOMER",
            "id": "7d99c250-b8ba-11ed-8d0d-21e1d787e420"
          }
        }
      },
      "7e4fa5c0-0cd5-8e4a-cbc7-d344e1f97f98": {
        "id": "7e4fa5c0-0cd5-8e4a-cbc7-d344e1f97f98",
        "alias": "Selected Entity",
        "filter": {
          "type": "stateEntity",
          "resolveMultiple": false,
          "stateEntityParamName": null,
          "defaultStateEntity": null
        }
      },
      "cf56bf45-71d6-3a80-aee8-1685316400c2": {
        "id": "cf56bf45-71d6-3a80-aee8-1685316400c2",
        "alias": "Selected Device",
        "filter": {
          "type": "relationsQuery",
          "resolveMultiple": true,
          "rootStateEntity": true,
          "stateEntityParamName": null,
          "defaultStateEntity": {
            "entityType": "TENANT",
            "id": "08a3e6b0-96f0-11ed-8d0d-21e1d787e420"
          },
          "rootEntity": null,
          "direction": "FROM",
          "maxLevel": 3,
          "fetchLastLevelOnly": false,
          "filters": [
            {
              "relationType": "Contains",
              "entityTypes": [
                "DEVICE"
              ]
            }
          ]
        }
      }
    },
    "filters": {},
    "timewindow": {
      "displayValue": "",
      "hideInterval": false,
      "hideAggregation": false,
      "hideAggInterval": false,
      "hideTimezone": false,
      "selectedTab": 0,
      "realtime": {
        "realtimeType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "quickInterval": "CURRENT_DAY"
      },
      "history": {
        "historyType": 0,
        "interval": 1000,
        "timewindowMs": 60000,
        "fixedTimewindow": {
          "startTimeMs": 1690443392409,
          "endTimeMs": 1690529792409
        },
        "quickInterval": "CURRENT_DAY"
      },
      "aggregation": {
        "type": "AVG",
        "limit": 25000
      }
    },
    "settings": {
      "stateControllerId": "entity",
      "showTitle": false,
      "showDashboardsSelect": true,
      "showEntitiesSelect": true,
      "showDashboardTimewindow": true,
      "showDashboardExport": true,
      "toolbarAlwaysOpen": true,
      "titleColor": "rgba(0,0,0,0.870588)",
      "showDashboardLogo": false,
      "dashboardLogoUrl": null,
      "hideToolbar": true,
      "showFilters": true,
      "showUpdateDashboardImage": true
    }
  },
  "name": "Schedule Management"
}